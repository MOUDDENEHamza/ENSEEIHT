[comment encoding = UTF-8 /]
[module toTina('http://petrinet/')]
[template public toTina(aPetriNet : PetriNet)]
[comment @main/] 
[file (aPetriNet.name + 'net', false, 'UTF-8')]
net ifip 
[for (pl : Place | aPetriNet.petrinetelement->getPlaces())]
	pl [pl.name/] ([pl.tokens/])
[/for]
[for (tr : Transition | aPetriNet.petrinetelement->getTransitions())]
	tr [tr.name/] [tr.getTransitionsPredecessors()/] -> [tr.getTransitionsSuccessors()/]
[/for]
[/file]
[/template]

[query public getPlaces(elements : OrderedSet(Node)) : OrderedSet(Place) =
	elements->select( e | e.oclIsTypeOf(Place) ) ->collect( e | e.oclAsType(Place) ) ->asOrderedSet() 
/] 

[query public getTransitions(elements : OrderedSet(Node)) : OrderedSet(Transition) =
	elements->select( e | e.oclIsTypeOf(Transition) ) ->collect( e | e.oclAsType(Transition) ) ->asOrderedSet() 
/]

[template public getTransitionsPredecessors(tr : Transition)]
	[for (arc : Edge | tr.linkToSource)][arc.cible.name/][/for] 
[/template]

[template public getTransitionsSuccessors(tr : Transition)]
	[for (arc : Edge | tr.linkToCible)][arc.source.name/][/for]
[/template] 

[template public getPredecessorPlace(arc : Edge)]
	[arc.source.name/][if (arc.type=1)]?[arc.tokens/][elseif (arc.tokens > 1)]*[arc.tokens/][/if]
[/template]

[template public getSuccessorPlace(arc : Edge)]
	[arc.cible.name/][if (arc.tokens > 1)]*[arc.tokens/][/if]
[/template]