# 1 "descendant/Scanner.mll"
 

(* Partie recopiée dans le fichier CaML généré. *)
(* Ouverture de modules exploités dans les actions *)
(* Déclarations de types, de constantes, de fonctions, d'exceptions exploités dans les actions *)

  open Tokens 
  exception Printf


# 13 "descendant/Scanner.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\241\255\061\000\011\000\021\000\000\000\000\000\246\255\
    \247\255\248\255\249\255\250\255\251\255\252\255\000\000\001\000\
    \004\000\000\000\001\000\253\255\001\000\000\000\245\255\003\000\
    \000\000\002\000\244\255\242\255\119\000";
  Lexing.lex_backtrk =
   "\255\255\255\255\014\000\012\000\014\000\014\000\014\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\014\000\001\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\015\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\000\000\255\255";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\016\000\016\000\255\255\000\000\016\000\016\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\000\000\002\000\015\000\016\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\004\000\009\000\004\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\010\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\008\000\000\000\007\000\000\000\027\000\
    \000\000\023\000\000\000\000\000\000\000\022\000\005\000\026\000\
    \000\000\000\000\000\000\000\000\018\000\019\000\014\000\024\000\
    \000\000\000\000\020\000\025\000\006\000\017\000\021\000\000\000\
    \000\000\000\000\000\000\012\000\000\000\011\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \000\000\027\000\000\000\000\000\000\000\000\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \013\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\015\000\255\255\016\000\016\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\000\000\016\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\002\000\
    \255\255\005\000\255\255\255\255\255\255\021\000\000\000\025\000\
    \255\255\255\255\255\255\255\255\017\000\018\000\000\000\023\000\
    \255\255\255\255\006\000\024\000\000\000\014\000\020\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \255\255\028\000\255\255\255\255\255\255\255\255\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\015\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec scanner lexbuf =
   __ocaml_lex_scanner_rec lexbuf 0
and __ocaml_lex_scanner_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 23 "descendant/Scanner.mll"
                         ( (scanner lexbuf) )
# 149 "descendant/Scanner.ml"

  | 1 ->
# 24 "descendant/Scanner.mll"
                     ( (scanner lexbuf) )
# 154 "descendant/Scanner.ml"

  | 2 ->
# 25 "descendant/Scanner.mll"
                ( UL_VIDE::(scanner lexbuf) )
# 159 "descendant/Scanner.ml"

  | 3 ->
# 26 "descendant/Scanner.mll"
              ( [UL_FIN] )
# 164 "descendant/Scanner.ml"

  | 4 ->
# 27 "descendant/Scanner.mll"
                                          ( UL_ACCOUV::(scanner lexbuf) )
# 169 "descendant/Scanner.ml"

  | 5 ->
# 28 "descendant/Scanner.mll"
                                          ( UL_ACCFER::(scanner lexbuf) )
# 174 "descendant/Scanner.ml"

  | 6 ->
# 29 "descendant/Scanner.mll"
                                                ( UL_DBLPT::(scanner lexbuf) )
# 179 "descendant/Scanner.ml"

  | 7 ->
# 30 "descendant/Scanner.mll"
                                                ( UL_VIRG::(scanner lexbuf) )
# 184 "descendant/Scanner.ml"

  | 8 ->
# 31 "descendant/Scanner.mll"
                                                ( UL_CROOUV::(scanner lexbuf) )
# 189 "descendant/Scanner.ml"

  | 9 ->
# 32 "descendant/Scanner.mll"
                                                ( UL_CROFER::(scanner lexbuf) )
# 194 "descendant/Scanner.ml"

  | 10 ->
# 33 "descendant/Scanner.mll"
                                                ( UL_VRAI::(scanner lexbuf) )
# 199 "descendant/Scanner.ml"

  | 11 ->
# 34 "descendant/Scanner.mll"
                                                ( UL_FAUX::(scanner lexbuf) )
# 204 "descendant/Scanner.ml"

  | 12 ->
let
# 35 "descendant/Scanner.mll"
                             texte
# 210 "descendant/Scanner.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 35 "descendant/Scanner.mll"
                                                ( (UL_NOMBRE (int_of_string texte))::(scanner lexbuf) )
# 214 "descendant/Scanner.ml"

  | 13 ->
let
# 36 "descendant/Scanner.mll"
                                        texte
# 220 "descendant/Scanner.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 36 "descendant/Scanner.mll"
                                                ( (UL_CHAINE (texte))::(scanner lexbuf) )
# 224 "descendant/Scanner.ml"

  | 14 ->
let
# 37 "descendant/Scanner.mll"
         texte
# 230 "descendant/Scanner.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 37 "descendant/Scanner.mll"
                     ( (print_string "Erreur lexicale : ");(print_char texte);(print_newline ()); (UL_ERREUR::(scanner lexbuf)) )
# 234 "descendant/Scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_scanner_rec lexbuf __ocaml_lex_state

;;

# 39 "descendant/Scanner.mll"
 


# 245 "descendant/Scanner.ml"
