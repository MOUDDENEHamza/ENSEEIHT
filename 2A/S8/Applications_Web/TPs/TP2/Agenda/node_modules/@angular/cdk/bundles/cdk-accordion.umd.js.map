{"version":3,"file":"cdk-accordion.umd.js","sources":["../../../../../src/cdk/accordion/accordion.ts","../../../../../src/cdk/accordion/accordion-item.ts","../../../../../src/cdk/accordion/accordion-module.ts","../../../../../src/cdk/accordion/public-api.ts","../../../../../src/cdk/accordion/index.ts"],"names":["InjectionToken","Subject","coerceBooleanProperty","Directive","Input","nextId","Subscription","EventEmitter","Optional","Inject","SkipSelf","ChangeDetectorRef","UniqueSelectionDispatcher","Output","NgModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, InjectionToken, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const CDK_ACCORDION = new InjectionToken<CdkAccordion>('CdkAccordion');\n\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n@Directive({\n  selector: 'cdk-accordion, [cdkAccordion]',\n  exportAs: 'cdkAccordion',\n  providers: [{provide: CDK_ACCORDION, useExisting: CdkAccordion}],\n})\nexport class CdkAccordion implements OnDestroy, OnChanges {\n  /** Emits when the state of the accordion changes */\n  readonly _stateChanges = new Subject<SimpleChanges>();\n\n  /** Stream that emits true/false when openAll/closeAll is triggered. */\n  readonly _openCloseAllActions: Subject<boolean> = new Subject<boolean>();\n\n  /** A readonly id value to use for unique selection coordination. */\n  readonly id = `cdk-accordion-${nextId++}`;\n\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  @Input()\n  get multi(): boolean { return this._multi; }\n  set multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\n  private _multi: boolean = false;\n\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll(): void {\n    if (this._multi) {\n      this._openCloseAllActions.next(true);\n    }\n  }\n\n  /** Closes all enabled accordion items in an accordion where multi is enabled. */\n  closeAll(): void {\n    this._openCloseAllActions.next(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._stateChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._openCloseAllActions.complete();\n  }\n\n  static ngAcceptInputType_multi: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Output,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n  SkipSelf,\n  Inject,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {CDK_ACCORDION, CdkAccordion} from './accordion';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs';\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n@Directive({\n  selector: 'cdk-accordion-item, [cdkAccordionItem]',\n  exportAs: 'cdkAccordionItem',\n  providers: [\n    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n    // registering to the same accordion.\n    {provide: CDK_ACCORDION, useValue: undefined},\n  ],\n})\nexport class CdkAccordionItem implements OnDestroy {\n  /** Subscription to openAll/closeAll events. */\n  private _openCloseAllSubscription = Subscription.EMPTY;\n  /** Event emitted every time the AccordionItem is closed. */\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted every time the AccordionItem is opened. */\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted when the AccordionItem is destroyed. */\n  @Output() destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The unique AccordionItem id. */\n  readonly id: string = `cdk-accordion-child-${nextId++}`;\n\n  /** Whether the AccordionItem is expanded. */\n  @Input()\n  get expanded(): any { return this._expanded; }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the AccordionItem is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(disabled: any) { this._disabled = coerceBooleanProperty(disabled); }\n  private _disabled: boolean = false;\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  constructor(@Optional() @Inject(CDK_ACCORDION) @SkipSelf() public accordion: CdkAccordion,\n              private _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  toggle(): void {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to false. */\n  close(): void {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to true. */\n  open(): void {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n\n  private _subscribeToOpenCloseAllActions(): Subscription {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n\n  static ngAcceptInputType_expanded: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkAccordion} from './accordion';\nimport {CdkAccordionItem} from './accordion-item';\n\n\n@NgModule({\n  exports: [CdkAccordion, CdkAccordionItem],\n  declarations: [CdkAccordion, CdkAccordionItem],\n})\nexport class CdkAccordionModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CdkAccordionItem} from './accordion-item';\nexport {CdkAccordion} from './accordion';\nexport * from './accordion-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a} from './accordion';"]}