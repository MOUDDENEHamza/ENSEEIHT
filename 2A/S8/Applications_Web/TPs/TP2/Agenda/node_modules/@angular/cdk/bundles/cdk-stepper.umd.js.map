{"version":3,"file":"cdk-stepper.umd.js","sources":["../../../../../src/cdk/stepper/step-header.ts","../../../../../src/cdk/stepper/step-label.ts","../../../../../src/cdk/stepper/stepper.ts","../../../../../src/cdk/stepper/stepper-button.ts","../../../../../src/cdk/stepper/stepper-module.ts","../../../../../src/cdk/stepper/public-api.ts","../../../../../src/cdk/stepper/index.ts"],"names":["Directive","ElementRef","TemplateRef","InjectionToken","coerceBooleanProperty","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","forwardRef","Optional","ContentChild","ViewChild","Input","Subject","QueryList","EventEmitter","coerceNumberProperty","startWith","takeUntil","FocusKeyManager","observableOf","hasModifierKey","SPACE","ENTER","Directionality","ChangeDetectorRef","DOCUMENT","ContentChildren","Output","HostListener","NgModule","BidiModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {FocusableOption} from '@angular/cdk/a11y';\n\n\n@Directive({\n  selector: '[cdkStepHeader]',\n  host: {\n    'role': 'tab',\n  },\n})\nexport class CdkStepHeader implements FocusableOption {\n  constructor(public _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {ENTER, hasModifierKey, SPACE} from '@angular/cdk/keycodes';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  AfterContentInit,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\nimport {CdkStepHeader} from './step-header';\nimport {CdkStepLabel} from './step-label';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous'|'current'|'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal'|'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number'|'edit'|'done'|'error'|string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const STEPPER_GLOBAL_OPTIONS = new InjectionToken<StepperOptions>('STEPPER_GLOBAL_OPTIONS');\n\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nexport const MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef, {static: true}) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: AbstractControlLike;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as completed. */\n  @Input()\n  get editable(): boolean {\n    return this._editable;\n  }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean {\n    return this._optional;\n  }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n  set completed(value: boolean) {\n    this._completedOverride = coerceBooleanProperty(value);\n  }\n  _completedOverride: boolean|null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean|null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n      @Inject(forwardRef(() => CdkStepper)) public _stepper: CdkStepper,\n      @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterContentInit, AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document|undefined;\n\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  @ContentChildren(CdkStep, {descendants: true}) _steps: QueryList<CdkStep>;\n\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  readonly steps: QueryList<CdkStep> = new QueryList<CdkStep>();\n\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(CdkStepHeader, {descendants: true}) _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean {\n    return this._linear;\n  }\n  set linear(value: boolean) {\n    this._linear = coerceBooleanProperty(value);\n  }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(index: number) {\n    const newIndex = coerceNumberProperty(index);\n\n    if (this.steps && this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      const selectedStep = this.selected;\n\n      if (selectedStep) {\n        // TODO: this should really be called something like `visited` instead. Just because\n        // the user has seen the step doesn't guarantee that they've interacted with it.\n        selectedStep.interacted = true;\n      }\n\n      if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n          (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = newIndex;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output()\n  selectionChange: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n      @Optional() private _dir: Directionality, private _changeDetectorRef: ChangeDetectorRef,\n      // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n      private _elementRef?: ElementRef<HTMLElement>, @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterContentInit() {\n    this._steps.changes\n      .pipe(startWith(this._steps), takeUntil(this._destroyed))\n      .subscribe((steps: QueryList<CdkStep>) => {\n        this.steps.reset(steps.filter(step => step._stepper === this));\n        this.steps.notifyOnChanges();\n      });\n  }\n\n  ngAfterViewInit() {\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view children. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager<FocusableOption>(this._stepHeader)\n                           .withWrap()\n                           .withHomeAndEnd()\n                           .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? (this._dir.change as Observable<Direction>) : observableOf<Direction>())\n        .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n        .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItem(this._selectedIndex);\n\n    // No need to `takeUntil` here, because we're the ones destroying `steps`.\n    this.steps.changes.subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n\n    // The logic which asserts that the selected index is within bounds doesn't run before the\n    // steps are initialized, because we don't how many steps there are yet so we may have an\n    // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n    if (!this._isValidIndex(this._selectedIndex)) {\n      this._selectedIndex = 0;\n    }\n  }\n\n  ngOnDestroy() {\n    this.steps.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                                               this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n      step: CdkStep, isCurrentStep: boolean, state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItem(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier &&\n        (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    if (this._linear && index >= 0) {\n      return this.steps.toArray().slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete =\n            control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n\n  /** Checks whether the passed-in index is a valid step index. */\n  private _isValidIndex(index: number): boolean {\n    return index > -1 && (!this.steps || index < this.steps.length);\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_linear: BooleanInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n\n\n/**\n * Simplified representation of an \"AbstractControl\" from @angular/forms.\n * Used to avoid having to bring in @angular/forms for a single optional interface.\n * @docs-private\n */\ninterface AbstractControlLike {\n  asyncValidator: ((control: any) => any) | null;\n  dirty: boolean;\n  disabled: boolean;\n  enabled: boolean;\n  errors: {[key: string]: any} | null;\n  invalid: boolean;\n  parent: any;\n  pending: boolean;\n  pristine: boolean;\n  root: AbstractControlLike;\n  status: string;\n  statusChanges: Observable<any>;\n  touched: boolean;\n  untouched: boolean;\n  updateOn: any;\n  valid: boolean;\n  validator: ((control: any) => any) | null;\n  value: any;\n  valueChanges: Observable<any>;\n  clearAsyncValidators(): void;\n  clearValidators(): void;\n  disable(opts?: any): void;\n  enable(opts?: any): void;\n  get(path: (string | number)[] | string): AbstractControlLike | null;\n  getError(errorCode: string, path?: (string | number)[] | string): any;\n  hasError(errorCode: string, path?: (string | number)[] | string): boolean;\n  markAllAsTouched(): void;\n  markAsDirty(opts?: any): void;\n  markAsPending(opts?: any): void;\n  markAsPristine(opts?: any): void;\n  markAsTouched(opts?: any): void;\n  markAsUntouched(opts?: any): void;\n  patchValue(value: any, options?: Object): void;\n  reset(value?: any, options?: Object): void;\n  setAsyncValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setErrors(errors: {[key: string]: any} | null, opts?: any): void;\n  setParent(parent: any): void;\n  setValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setValue(value: any, options?: Object): void;\n  updateValueAndValidity(opts?: any): void;\n  patchValue(value: any, options?: any): void;\n  reset(formState?: any, options?: any): void;\n  setValue(value: any, options?: any): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, HostListener, Input} from '@angular/core';\n\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.next();\n  }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.previous();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {CdkStepHeader} from './step-header';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule],\n  exports: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ],\n  declarations: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ]\n})\nexport class CdkStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper';\nexport * from './step-label';\nexport * from './stepper-button';\nexport * from './stepper-module';\nexport * from './step-header';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}