{"version":3,"file":"material-datepicker.umd.js","sources":["../../../../../src/material/datepicker/datepicker-errors.ts","../../../../../src/material/datepicker/datepicker-intl.ts","../../../../../src/material/datepicker/calendar-body.ts","../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../src/material/datepicker/date-selection-model.ts","../../../../../src/material/datepicker/date-range-selection-strategy.ts","../../../../../src/material/datepicker/month-view.ts","../../../../../src/material/datepicker/multi-year-view.ts","../../../../../src/material/datepicker/year-view.ts","../../../../../src/material/datepicker/calendar.ts","../../../../../src/material/datepicker/datepicker-animations.ts","../../../../../src/material/datepicker/datepicker-base.ts","../../../../../src/material/datepicker/datepicker.ts","../../../../../src/material/datepicker/datepicker-input-base.ts","../../../../../src/material/datepicker/datepicker-input.ts","../../../../../src/material/datepicker/datepicker-toggle.ts","../../../../../src/material/datepicker/date-range-input-parts.ts","../../../../../src/material/datepicker/date-range-input.ts","../../../../../src/material/datepicker/date-range-picker.ts","../../../../../src/material/datepicker/datepicker-actions.ts","../../../../../src/material/datepicker/datepicker-module.ts","../../../../../src/material/datepicker/public-api.ts","../../../../../src/material/datepicker/index.ts"],"names":["Subject","Injectable","EventEmitter","take","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","NgZone","Input","Output","DateAdapter","Optional","SkipSelf","InjectionToken","Subscription","startWith","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","END","PAGE_UP","PAGE_DOWN","ENTER","SPACE","ESCAPE","hasModifierKey","ChangeDetectorRef","Inject","MAT_DATE_FORMATS","Directionality","ViewChild","forwardRef","ComponentPortal","trigger","state","style","transition","animate","Overlay","mixinColor","coerceBooleanProperty","coerceStringArray","portal","OverlayConfig","merge","filter","Directive","MatDialog","ViewContainerRef","DOCUMENT","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","MAT_INPUT_VALUE_ACCESSOR","MatFormField","MAT_FORM_FIELD","observableOf","Attribute","ContentChild","NgControl","InjectFlags","ErrorStateMatcher","Injector","NgForm","FormGroupDirective","mixinErrorState","BACKSPACE","MatFormFieldControl","ControlContainer","Self","TemplatePortal","TemplateRef","NgModule","CommonModule","MatButtonModule","MatDialogModule","OverlayModule","A11yModule","PortalModule","MatCommonModule","CdkScrollableModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** Label for the button used to close the calendar popup. */\n  closeCalendarLabel: string = 'Close calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n\n  /** Formats a range of years. */\n  formatYearRange(start: string, end: string): string {\n    return `${start} \\u2013 ${end}`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/** Extra CSS classes that can be associated with a calendar cell. */\nexport type MatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/** Function that can generate the extra classes that should be added to a calendar cell. */\nexport type MatCalendarCellClassFunction<D> =\n    (date: D, view: 'month' | 'year' | 'multi-year') => MatCalendarCellCssClasses;\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatCalendarCell<D = any> {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses: MatCalendarCellCssClasses = {},\n              public compareValue = value,\n              public rawValue?: D) {}\n}\n\n/** Event emitted when a date inside the calendar is triggered as a result of a user action. */\nexport interface MatCalendarUserEvent<D> {\n  value: D;\n  event: Event;\n}\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  selector: '[mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarBody implements OnChanges, OnDestroy {\n  /**\n   * Used to skip the next focus event when rendering the preview range.\n   * We need a flag like this, because some browsers fire focus events asynchronously.\n   */\n  private _skipNextFocus: boolean;\n\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** Start value of the selected date range. */\n  @Input() startValue: number;\n\n  /** End value of the selected date range. */\n  @Input() endValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols: number = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell: number = 0;\n\n  /** Whether a range is being selected. */\n  @Input() isRange: boolean = false;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio: number = 1;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: number | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: number | null;\n\n  /** Start of the preview range. */\n  @Input() previewStart: number | null = null;\n\n  /** End of the preview range. */\n  @Input() previewEnd: number | null = null;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<MatCalendarUserEvent<number>> =\n      new EventEmitter<MatCalendarUserEvent<number>>();\n\n  /** Emits when the preview has changed as a result of a user action. */\n  @Output() previewChange = new EventEmitter<MatCalendarUserEvent<MatCalendarCell | null>>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) {\n    _ngZone.runOutsideAngular(() => {\n      const element = _elementRef.nativeElement;\n      element.addEventListener('mouseenter', this._enterHandler, true);\n      element.addEventListener('focus', this._enterHandler, true);\n      element.addEventListener('mouseleave', this._leaveHandler, true);\n      element.addEventListener('blur', this._leaveHandler, true);\n    });\n  }\n\n  /** Called when a cell is clicked. */\n  _cellClicked(cell: MatCalendarCell, event: MouseEvent): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit({value: cell.value, event});\n    }\n  }\n\n  /** Returns whether a cell should be marked as selected. */\n  _isSelected(value: number) {\n    return this.startValue === value || this.endValue === value;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mouseenter', this._enterHandler, true);\n    element.removeEventListener('focus', this._enterHandler, true);\n    element.removeEventListener('mouseleave', this._leaveHandler, true);\n    element.removeEventListener('blur', this._leaveHandler, true);\n  }\n\n  /** Returns whether a cell is active. */\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell(movePreview = true) {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          if (!movePreview) {\n            this._skipNextFocus = true;\n          }\n\n          activeCell.focus();\n        }\n      });\n    });\n  }\n\n  /** Gets whether a value is the start of the main range. */\n  _isRangeStart(value: number) {\n    return isStart(value, this.startValue, this.endValue);\n  }\n\n  /** Gets whether a value is the end of the main range. */\n  _isRangeEnd(value: number) {\n    return isEnd(value, this.startValue, this.endValue);\n  }\n\n  /** Gets whether a value is within the currently-selected range. */\n  _isInRange(value: number): boolean {\n    return isInRange(value, this.startValue, this.endValue, this.isRange);\n  }\n\n  /** Gets whether a value is the start of the comparison range. */\n  _isComparisonStart(value: number) {\n    return isStart(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeStart(value: number, rowIndex: number, colIndex: number) {\n    if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n      return false;\n    }\n\n    let previousCell: MatCalendarCell | undefined = this.rows[rowIndex][colIndex - 1];\n\n    if (!previousCell) {\n      const previousRow = this.rows[rowIndex - 1];\n      previousCell = previousRow && previousRow[previousRow.length - 1];\n    }\n\n    return previousCell && !this._isRangeEnd(previousCell.compareValue);\n  }\n\n  /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeEnd(value: number, rowIndex: number, colIndex: number) {\n    if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n      return false;\n    }\n\n    let nextCell: MatCalendarCell | undefined = this.rows[rowIndex][colIndex + 1];\n\n    if (!nextCell) {\n      const nextRow = this.rows[rowIndex + 1];\n      nextCell = nextRow && nextRow[0];\n    }\n\n    return nextCell && !this._isRangeStart(nextCell.compareValue);\n  }\n\n  /** Gets whether a value is the end of the comparison range. */\n  _isComparisonEnd(value: number) {\n    return isEnd(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  /** Gets whether a value is within the current comparison range. */\n  _isInComparisonRange(value: number) {\n    return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n  }\n\n  /**\n   * Gets whether a value is the same as the start and end of the comparison range.\n   * For context, the functions that we use to determine whether something is the start/end of\n   * a range don't allow for the start and end to be on the same day, because we'd have to use\n   * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n   * the regular range, because when it happens, the selected styles take over and still show where\n   * the range would've been, however we don't have these selected styles for a comparison range.\n   * This function is used to apply a class that serves the same purpose as the one for selected\n   * dates, but it only applies in the context of a comparison range.\n   */\n  _isComparisonIdentical(value: number) {\n    // Note that we don't need to null check the start/end\n    // here, because the `value` will always be defined.\n    return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n  }\n\n  /** Gets whether a value is the start of the preview range. */\n  _isPreviewStart(value: number) {\n    return isStart(value, this.previewStart, this.previewEnd);\n  }\n\n  /** Gets whether a value is the end of the preview range. */\n  _isPreviewEnd(value: number) {\n    return isEnd(value, this.previewStart, this.previewEnd);\n  }\n\n  /** Gets whether a value is inside the preview range. */\n  _isInPreview(value: number) {\n    return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n  }\n\n  /**\n   * Event handler for when the user enters an element\n   * inside the calendar body (e.g. by hovering in or focus).\n   */\n  private _enterHandler = (event: Event) => {\n    if (this._skipNextFocus && event.type === 'focus') {\n      this._skipNextFocus = false;\n      return;\n    }\n\n    // We only need to hit the zone when we're selecting a range.\n    if (event.target && this.isRange) {\n      const cell = this._getCellFromElement(event.target as HTMLElement);\n\n      if (cell) {\n        this._ngZone.run(() => this.previewChange.emit({value: cell.enabled ? cell : null, event}));\n      }\n    }\n  }\n\n  /**\n   * Event handler for when the user's pointer leaves an element\n   * inside the calendar body (e.g. by hovering out or blurring).\n   */\n  private _leaveHandler = (event: Event) => {\n    // We only need to hit the zone when we're selecting a range.\n    if (this.previewEnd !== null && this.isRange) {\n      // Only reset the preview end value when leaving cells. This looks better, because\n      // we have a gap between the cells and the rows and we don't want to remove the\n      // range just for it to show up again when the user moves a few pixels to the side.\n      if (event.target && isTableCell(event.target as HTMLElement)) {\n        this._ngZone.run(() => this.previewChange.emit({value: null, event}));\n      }\n    }\n  }\n\n  /** Finds the MatCalendarCell that corresponds to a DOM node. */\n  private _getCellFromElement(element: HTMLElement): MatCalendarCell | null {\n    let cell: HTMLElement | undefined;\n\n    if (isTableCell(element)) {\n      cell = element;\n    } else if (isTableCell(element.parentNode!)) {\n      cell = element.parentNode as HTMLElement;\n    }\n\n    if (cell) {\n      const row = cell.getAttribute('data-mat-row');\n      const col = cell.getAttribute('data-mat-col');\n\n      if (row && col) {\n        return this.rows[parseInt(row)][parseInt(col)];\n      }\n    }\n\n    return null;\n  }\n\n}\n\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node: Node): node is HTMLTableCellElement {\n  return node.nodeName === 'TD';\n}\n\n/** Checks whether a value is the start of a range. */\nfunction isStart(value: number, start: number | null, end: number | null): boolean {\n  return end !== null && start !== end && value < end && value === start;\n}\n\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value: number, start: number | null, end: number | null): boolean {\n  return start !== null && start !== end && value >= start && value === end;\n}\n\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value: number,\n                   start: number | null,\n                   end: number | null,\n                   rangeEnabled: boolean): boolean {\n  return rangeEnabled && start !== null && end !== null && start !== end &&\n         value >= start && value <= end;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FactoryProvider, Injectable, Optional, SkipSelf, OnDestroy} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** A class representing a range of dates. */\nexport class DateRange<D> {\n  /**\n   * Ensures that objects with a `start` and `end` property can't be assigned to a variable that\n   * expects a `DateRange`\n   */\n  // tslint:disable-next-line:no-unused-variable\n  private _disableStructuralEquivalency: never;\n\n  constructor(\n    /** The start date of the range. */\n    readonly start: D | null,\n    /** The end date of the range. */\n    readonly end: D | null) {}\n}\n\n/**\n * Conditionally picks the date type, if a DateRange is passed in.\n * @docs-private\n */\nexport type ExtractDateTypeFromSelection<T> = T extends DateRange<infer D> ? D : NonNullable<T>;\n\n/**\n * Event emitted by the date selection model when its selection changes.\n * @docs-private\n */\nexport interface DateSelectionModelChange<S> {\n  /** New value for the selection. */\n  selection: S;\n\n  /** Object that triggered the change. */\n  source: unknown;\n}\n\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\n@Injectable()\nexport abstract class MatDateSelectionModel<S, D = ExtractDateTypeFromSelection<S>>\n    implements OnDestroy {\n  private _selectionChanged = new Subject<DateSelectionModelChange<S>>();\n\n  /** Emits when the selection has changed. */\n  selectionChanged: Observable<DateSelectionModelChange<S>> = this._selectionChanged;\n\n  protected constructor(\n    /** The current selection. */\n    readonly selection: S,\n    protected _adapter: DateAdapter<D>) {\n    this.selection = selection;\n  }\n\n  /**\n   * Updates the current selection in the model.\n   * @param value New selection that should be assigned.\n   * @param source Object that triggered the selection change.\n   */\n  updateSelection(value: S, source: unknown) {\n    (this as {selection: S}).selection = value;\n    this._selectionChanged.next({selection: value, source});\n  }\n\n  ngOnDestroy() {\n    this._selectionChanged.complete();\n  }\n\n  protected _isValidDateInstance(date: D): boolean {\n    return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n  }\n\n  /** Adds a date to the current selection. */\n  abstract add(date: D | null): void;\n\n  /** Checks whether the current selection is valid. */\n  abstract isValid(): boolean;\n\n  /** Checks whether the current selection is complete. */\n  abstract isComplete(): boolean;\n\n  /**\n   * Clones the selection model.\n   * @deprecated To be turned into an abstract method.\n   * @breaking-change 12.0.0\n   */\n  clone(): MatDateSelectionModel<S, D> {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw Error('Not implemented');\n    }\n\n    return null!;\n  }\n}\n\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\n@Injectable()\nexport class MatSingleDateSelectionModel<D> extends MatDateSelectionModel<D | null, D> {\n  constructor(adapter: DateAdapter<D>) {\n    super(null, adapter);\n  }\n\n  /**\n   * Adds a date to the current selection. In the case of a single date selection, the added date\n   * simply overwrites the previous selection\n   */\n  add(date: D | null) {\n    super.updateSelection(date, this);\n  }\n\n  /** Checks whether the current selection is valid. */\n  isValid(): boolean {\n    return this.selection != null && this._isValidDateInstance(this.selection);\n  }\n\n  /**\n   * Checks whether the current selection is complete. In the case of a single date selection, this\n   * is true if the current selection is not null.\n   */\n  isComplete() {\n    return this.selection != null;\n  }\n\n  /** Clones the selection model. */\n  clone() {\n    const clone = new MatSingleDateSelectionModel<D>(this._adapter);\n    clone.updateSelection(this.selection, this);\n    return clone;\n  }\n}\n\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\n@Injectable()\nexport class MatRangeDateSelectionModel<D> extends MatDateSelectionModel<DateRange<D>, D> {\n  constructor(adapter: DateAdapter<D>) {\n    super(new DateRange<D>(null, null), adapter);\n  }\n\n  /**\n   * Adds a date to the current selection. In the case of a date range selection, the added date\n   * fills in the next `null` value in the range. If both the start and the end already have a date,\n   * the selection is reset so that the given date is the new `start` and the `end` is null.\n   */\n  add(date: D | null): void {\n    let {start, end} = this.selection;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    super.updateSelection(new DateRange<D>(start, end), this);\n  }\n\n  /** Checks whether the current selection is valid. */\n  isValid(): boolean {\n    const {start, end} = this.selection;\n\n    // Empty ranges are valid.\n    if (start == null && end == null) {\n      return true;\n    }\n\n    // Complete ranges are only valid if both dates are valid and the start is before the end.\n    if (start != null && end != null) {\n      return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n             this._adapter.compareDate(start, end) <= 0;\n    }\n\n    // Partial ranges are valid if the start/end is valid.\n    return (start == null || this._isValidDateInstance(start)) &&\n           (end == null || this._isValidDateInstance(end));\n  }\n\n  /**\n   * Checks whether the current selection is complete. In the case of a date range selection, this\n   * is true if the current selection has a non-null `start` and `end`.\n   */\n  isComplete(): boolean {\n    return this.selection.start != null && this.selection.end != null;\n  }\n\n  /** Clones the selection model. */\n  clone() {\n    const clone = new MatRangeDateSelectionModel<D>(this._adapter);\n    clone.updateSelection(this.selection, this);\n    return clone;\n  }\n}\n\n/** @docs-private */\nexport function MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(\n    parent: MatSingleDateSelectionModel<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new MatSingleDateSelectionModel(adapter);\n}\n\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nexport const MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n\n/** @docs-private */\nexport function MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(\n    parent: MatSingleDateSelectionModel<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new MatRangeDateSelectionModel(adapter);\n}\n\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nexport const MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Optional, SkipSelf, FactoryProvider} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {DateRange} from './date-selection-model';\n\n/** Injection token used to customize the date range selection behavior. */\nexport const MAT_DATE_RANGE_SELECTION_STRATEGY =\n    new InjectionToken<MatDateRangeSelectionStrategy<any>>('MAT_DATE_RANGE_SELECTION_STRATEGY');\n\n/** Object that can be provided in order to customize the date range selection behavior. */\nexport interface MatDateRangeSelectionStrategy<D> {\n  /**\n   * Called when the user has finished selecting a value.\n   * @param date Date that was selected. Will be null if the user cleared the selection.\n   * @param currentRange Range that is currently show in the calendar.\n   * @param event DOM event that triggered the selection. Currently only corresponds to a `click`\n   *    event, but it may get expanded in the future.\n   */\n  selectionFinished(date: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\n\n  /**\n   * Called when the user has activated a new date (e.g. by hovering over\n   * it or moving focus) and the calendar tries to display a date range.\n   *\n   * @param activeDate Date that the user has activated. Will be null if the user moved\n   *    focus to an element that's no a calendar cell.\n   * @param currentRange Range that is currently shown in the calendar.\n   * @param event DOM event that caused the preview to be changed. Will be either a\n   *    `mouseenter`/`mouseleave` or `focus`/`blur` depending on how the user is navigating.\n   */\n  createPreview(activeDate: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\n}\n\n/** Provides the default date range selection behavior. */\n@Injectable()\nexport class DefaultMatCalendarRangeStrategy<D> implements MatDateRangeSelectionStrategy<D> {\n  constructor(private _dateAdapter: DateAdapter<D>) {}\n\n  selectionFinished(date: D, currentRange: DateRange<D>) {\n    let {start, end} = currentRange;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n\n  createPreview(activeDate: D | null, currentRange: DateRange<D>) {\n    let start: D | null = null;\n    let end: D | null = null;\n\n    if (currentRange.start && !currentRange.end && activeDate) {\n      start = currentRange.start;\n      end = activeDate;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n}\n\n\n/** @docs-private */\nexport function MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(\n  parent: MatDateRangeSelectionStrategy<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n\n/** @docs-private */\nexport const MAT_CALENDAR_RANGE_STRATEGY_PROVIDER: FactoryProvider = {\n  provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n  deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n  useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n  ESCAPE,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MatCalendarBody,\n  MatCalendarCell,\n  MatCalendarUserEvent,\n  MatCalendarCellClassFunction,\n} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\nimport {\n  MatDateRangeSelectionStrategy,\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n} from './date-range-selection-strategy';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMonthView<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n      this._dateAdapter.getValidDateOrNull(\n        this._dateAdapter.deserialize(value)\n      ) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setRanges(this._selected);\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: D | null;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<MatCalendarUserEvent<D | null>> =\n      new EventEmitter<MatCalendarUserEvent<D | null>>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /** Start value of the currently-shown date range. */\n  _rangeStart: number | null;\n\n  /** End value of the currently-shown date range. */\n  _rangeEnd: number | null;\n\n  /** Start value of the currently-shown comparison date range. */\n  _comparisonRangeStart: number | null;\n\n  /** End value of the currently-shown comparison date range. */\n  _comparisonRangeEnd: number | null;\n\n  /** Start of the preview range. */\n  _previewStart: number | null;\n\n  /** End of the preview range. */\n  _previewEnd: number | null;\n\n  /** Whether the user is currently selecting a range of dates. */\n  _isRange: boolean;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(readonly _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality,\n              @Inject(MAT_DATE_RANGE_SELECTION_STRATEGY) @Optional()\n                  private _rangeStrategy?: MatDateRangeSelectionStrategy<D>) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n\n    if (comparisonChange && !comparisonChange.firstChange) {\n      this._setRanges(this.selected);\n    }\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(event: MatCalendarUserEvent<number>) {\n    const date = event.value;\n    const selectedYear = this._dateAdapter.getYear(this.activeDate);\n    const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n    const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n    let rangeStartDate: number | null;\n    let rangeEndDate: number | null;\n\n    if (this._selected instanceof DateRange) {\n      rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n      rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n    } else {\n      rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n    }\n\n    if (rangeStartDate !== date || rangeEndDate !== date) {\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit({value: selectedDate, event: event.event});\n    this._previewStart = this._previewEnd = null;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected({value: this._dateAdapter.getDate(this._activeDate), event});\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      case ESCAPE:\n        // Abort the current range selection if the user presses escape mid-selection.\n        if (this._previewEnd != null && !hasModifierKey(event)) {\n          this._previewStart = this._previewEnd = null;\n          this.selectedChange.emit(null);\n          this._userSelection.emit({value: null, event});\n          event.preventDefault();\n          event.stopPropagation(); // Prevents the overlay from closing.\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._setRanges(this.selected);\n    this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n    this._monthLabel = this._dateFormats.display.monthLabel\n        ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n        : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell(movePreview?: boolean) {\n    this._matCalendarBody._focusActiveCell(movePreview);\n  }\n\n  /** Called when the user has activated a new cell and the preview needs to be updated. */\n  _previewChanged({event, value: cell}: MatCalendarUserEvent<MatCalendarCell<D> | null>) {\n    if (this._rangeStrategy) {\n      // We can assume that this will be a range, because preview\n      // events aren't fired for single date selections.\n      const value = cell ? cell.rawValue! : null;\n      const previewRange =\n          this._rangeStrategy.createPreview(value, this.selected as DateRange<D>, event);\n      this._previewStart = this._getCellCompareValue(previewRange.start);\n      this._previewEnd = this._getCellCompareValue(previewRange.end);\n\n      // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n      // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n      // when navigating one month back using the keyboard which will cause this handler\n      // to throw a \"changed after checked\" error when updating the preview state.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Initializes the weekdays. */\n  private _initWeekdays() {\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n        return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n\n  /** Creates MatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n\n      this._weeks[this._weeks.length - 1].push(new MatCalendarCell<D>(i + 1, dateNames[i],\n          ariaLabel, enabled, cellClasses, this._getCellCompareValue(date)!, date));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n        (!this.dateFilter || this.dateFilter(date));\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /** Gets the value that will be used to one cell to another. */\n  private _getCellCompareValue(date: D | null): number | null {\n    if (date) {\n      // We use the time since the Unix epoch to compare dates in this view, rather than the\n      // cell values, because we need to support ranges that span across multiple months/years.\n      const year = this._dateAdapter.getYear(date);\n      const month = this._dateAdapter.getMonth(date);\n      const day = this._dateAdapter.getDate(date);\n      return new Date(year, month, day).getTime();\n    }\n\n    return null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the current range based on a model value. */\n  private _setRanges(selectedValue: DateRange<D> | D | null) {\n    if (selectedValue instanceof DateRange) {\n      this._rangeStart = this._getCellCompareValue(selectedValue.start);\n      this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n      this._isRange = true;\n    } else {\n      this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n      this._isRange = false;\n    }\n\n    this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n    this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MatCalendarBody,\n  MatCalendarCell,\n  MatCalendarUserEvent,\n  MatCalendarCellClassFunction,\n} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMultiYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n      this._dateAdapter.getValidDateOrNull(\n        this._dateAdapter.deserialize(value)\n      ) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (!isSameMultiYearView(\n      this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setSelectedYear(value);\n  }\n  private _selected: DateRange<D> | D | null;\n\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to date cells. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: MatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(event: MatCalendarUserEvent<number>) {\n    const year = event.value;\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          yearsPerPage - getActiveOffset(\n            this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected({value: this._dateAdapter.getYear(this._activeDate), event});\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an MatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    const date = this._dateAdapter.createDate(year, 0, 1);\n    const yearName = this._dateAdapter.getYearName(date);\n    const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the currently-highlighted year based on a model value. */\n  private _setSelectedYear(value: DateRange<D> | D | null) {\n    this._selectedYear = null;\n\n    if (value instanceof DateRange) {\n      const displayValue = value.start || value.end;\n\n      if (displayValue) {\n        this._selectedYear = this._dateAdapter.getYear(displayValue);\n      }\n    } else if (value) {\n      this._selectedYear = this._dateAdapter.getYear(value);\n    }\n  }\n}\n\nexport function isSameMultiYearView<D>(\n  dateAdapter: DateAdapter<D>, date1: D, date2: D, minDate: D | null, maxDate: D | null): boolean {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) ===\n          Math.floor((year2 - startingYear) / yearsPerPage);\n}\n\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nexport function getActiveOffset<D>(\n  dateAdapter: DateAdapter<D>, activeDate: D, minDate: D | null, maxDate: D | null): number {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)),\n    yearsPerPage);\n}\n\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear<D>(\n  dateAdapter: DateAdapter<D>, minDate: D | null, maxDate: D | null): number {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo (a: number, b: number): number {\n  return (a % b + b) % b;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MatCalendarBody,\n  MatCalendarCell,\n  MatCalendarUserEvent,\n  MatCalendarCellClassFunction,\n} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n      this._dateAdapter.getValidDateOrNull(\n        this._dateAdapter.deserialize(value)\n      ) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setSelectedMonth(value);\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to date cells. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(readonly _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(event: MatCalendarUserEvent<number>) {\n    const month = event.value;\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected({value: this._dateAdapter.getMonth(this._activeDate), event});\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._setSelectedMonth(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an MatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n    const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n    const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n\n    return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel,\n        this._shouldEnableMonth(month), cellClasses);\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the currently-selected month based on a model value. */\n  private _setSelectedMonth(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                            this._getMonthInCurrentYear(value.end);\n    } else {\n      this._selectedMonth = this._getMonthInCurrentYear(value);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n} from '@angular/material/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {MatCalendarUserEvent, MatCalendarCellClassFunction} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatMonthView} from './month-view';\nimport {\n  getActiveOffset,\n  isSameMultiYearView,\n  MatMultiYearView,\n  yearsPerPage\n} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, DateRange} from './date-selection-model';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type MatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n\n/** Default header for MatCalendar */\n@Component({\n  selector: 'mat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarHeader<D> {\n  _buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n\n  constructor(private _intl: MatDatepickerIntl,\n              @Inject(forwardRef(() => MatCalendar)) public calendar: MatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    const minYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n    const maxYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n    return this._intl.formatYearRange(minYearName, maxYearName);\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked(): void {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(\n      this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]\n})\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n  /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: MatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: D | null;\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits when the current view changes.\n   */\n  @Output() readonly viewChanged: EventEmitter<MatCalendarView> =\n    new EventEmitter<MatCalendarView>(true);\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<MatCalendarUserEvent<D | null>> =\n      new EventEmitter<MatCalendarUserEvent<D | null>>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(MatMonthView) monthView: MatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(MatYearView) yearView: MatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(MatMultiYearView) multiYearView: MatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): MatCalendarView { return this._currentView; }\n  set currentView(value: MatCalendarView) {\n    const viewChangedResult = this._currentView !== value ? value : null;\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n    if (viewChangedResult) {\n      this.viewChanged.emit(viewChangedResult);\n    }\n  }\n  private _currentView: MatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: MatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell(false);\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    const currentView = this.currentView;\n    let view: MatMonthView<D> | MatYearView<D> | MatMultiYearView<D>;\n\n    if (currentView === 'month') {\n      view = this.monthView;\n    } else if (currentView === 'year') {\n      view = this.yearView;\n    } else {\n      view = this.multiYearView;\n    }\n\n    view._init();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(event: MatCalendarUserEvent<D | null>): void {\n    const date = event.value;\n\n    if (this.selected instanceof DateRange ||\n        (date && !this._dateAdapter.sameDate(date, this.selected))) {\n      this.selectedChange.emit(date);\n    }\n\n    this._userSelection.emit(event);\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty, coerceStringArray} from '@angular/cdk/coercion';\nimport {ESCAPE, hasModifierKey, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  FlexibleConnectedPositionStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, TemplatePortal} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  DateAdapter,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Observable, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatCalendar, MatCalendarView} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatCalendarUserEvent, MatCalendarCellClassFunction} from './calendar-body';\nimport {DateFilterFn} from './datepicker-input-base';\nimport {\n  ExtractDateTypeFromSelection,\n  MatDateSelectionModel,\n  DateRange,\n} from './date-selection-model';\nimport {\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n  MatDateRangeSelectionStrategy,\n} from './date-range-selection-strategy';\nimport {MatDatepickerIntl} from './datepicker-intl';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** Possible positions for the datepicker dropdown along the X axis. */\nexport type DatepickerDropdownPositionX = 'start' | 'end';\n\n/** Possible positions for the datepicker dropdown along the Y axis. */\nexport type DatepickerDropdownPositionY = 'above' | 'below';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _MatDatepickerContentMixinBase: CanColorCtor & typeof MatDatepickerContentBase =\n    mixinColor(MatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  selector: 'mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '_animationState',\n    '(@transformPanel.done)': '_animationDone.next()',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class MatDatepickerContent<S, D = ExtractDateTypeFromSelection<S>>\n  extends _MatDatepickerContentMixinBase implements OnInit, AfterViewInit, OnDestroy, CanColor {\n  private _subscriptions = new Subscription();\n  private _model: MatDateSelectionModel<S, D>;\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(MatCalendar) _calendar: MatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: MatDatepickerBase<any, S, D>;\n\n  /** Start of the comparison range. */\n  comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  comparisonEnd: D | null;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  /** Current state of the animation. */\n  _animationState: 'enter' | 'void' = 'enter';\n\n  /** Emits when an animation has finished. */\n  _animationDone = new Subject<void>();\n\n  /** Text for the close button. */\n  _closeButtonText: string;\n\n  /** Whether the close button currently has focus. */\n  _closeButtonFocused: boolean;\n\n  /** Portal with projected action buttons. */\n  _actionsPortal: TemplatePortal | null = null;\n\n  constructor(\n    elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _globalModel: MatDateSelectionModel<S, D>,\n    private _dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_RANGE_SELECTION_STRATEGY)\n        private _rangeSelectionStrategy: MatDateRangeSelectionStrategy<D>,\n    /**\n     * @deprecated `intl` argument to become required.\n     * @breaking-change 12.0.0\n     */\n    intl?: MatDatepickerIntl) {\n    super(elementRef);\n    // @breaking-change 12.0.0 Remove fallback for `intl`.\n    this._closeButtonText = intl?.closeCalendarLabel || 'Close calendar';\n  }\n\n  ngOnInit() {\n    // If we have actions, clone the model so that we have the ability to cancel the selection,\n    // otherwise update the global model directly. Note that we want to assign this as soon as\n    // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n    this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n  }\n\n  ngAfterViewInit() {\n    this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    }));\n    this._calendar.focusActiveCell();\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this._animationDone.complete();\n  }\n\n  _handleUserSelection(event: MatCalendarUserEvent<D | null>) {\n    const selection = this._model.selection;\n    const value = event.value;\n    const isRange = selection instanceof DateRange;\n\n    // If we're selecting a range and we have a selection strategy, always pass the value through\n    // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n    // A null value when picking a range means that the user cancelled the selection (e.g. by\n    // pressing escape), whereas when selecting a single value it means that the value didn't\n    // change. This isn't very intuitive, but it's here for backwards-compatibility.\n    if (isRange && this._rangeSelectionStrategy) {\n      const newSelection = this._rangeSelectionStrategy.selectionFinished(value,\n          selection as unknown as DateRange<D>, event.event);\n      this._model.updateSelection(newSelection as unknown as S, this);\n    } else if (value && (isRange ||\n              !this._dateAdapter.sameDate(value, selection as unknown as D))) {\n      this._model.add(value);\n    }\n\n    // Delegate closing the popup to the actions.\n    if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n      this.datepicker.close();\n    }\n  }\n\n  _startExitAnimation() {\n    this._animationState = 'void';\n    this._changeDetectorRef.markForCheck();\n  }\n\n  _getSelected() {\n    return this._model.selection as unknown as D | DateRange<D> | null;\n  }\n\n  /** Applies the current pending selection to the global model. */\n  _applyPendingSelection() {\n    if (this._model !== this._globalModel) {\n      this._globalModel.updateSelection(this._model.selection, this);\n    }\n  }\n}\n\n/** Form control that can be associated with a datepicker. */\nexport interface MatDatepickerControl<D> {\n  getStartValue(): D | null;\n  getThemePalette(): ThemePalette;\n  min: D | null;\n  max: D | null;\n  disabled: boolean;\n  dateFilter: DateFilterFn<D>;\n  getConnectedOverlayOrigin(): ElementRef;\n  stateChanges: Observable<void>;\n}\n\n/** A datepicker that can be attached to a {@link MatDatepickerControl}. */\nexport interface MatDatepickerPanel<C extends MatDatepickerControl<D>, S,\n    D = ExtractDateTypeFromSelection<S>> {\n  /** Stream that emits whenever the date picker is closed. */\n  closedStream: EventEmitter<void>;\n  /** Color palette to use on the datepicker's calendar. */\n  color: ThemePalette;\n  /** The input element the datepicker is associated with. */\n  datepickerInput: C;\n  /** Whether the datepicker pop-up should be disabled. */\n  disabled: boolean;\n  /** The id for the datepicker's calendar. */\n  id: string;\n  /** Whether the datepicker is open. */\n  opened: boolean;\n  /** Stream that emits whenever the date picker is opened. */\n  openedStream: EventEmitter<void>;\n  /** Emits when the datepicker's state changes. */\n  stateChanges: Subject<void>;\n  /** Opens the datepicker. */\n  open(): void;\n  /** Register an input with the datepicker. */\n  registerInput(input: C): MatDateSelectionModel<S, D>;\n}\n\n/** Base class for a datepicker. */\n@Directive()\nexport abstract class MatDatepickerBase<C extends MatDatepickerControl<D>, S,\n  D = ExtractDateTypeFromSelection<S>> implements MatDatepickerPanel<C, S, D>, OnDestroy,\n    OnChanges {\n  private _scrollStrategy: () => ScrollStrategy;\n  private _inputStateChanges = Subscription.EMPTY;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this.datepickerInput ?\n        this.datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this.stateChanges.next(undefined);\n    }\n  }\n  private _disabled: boolean;\n\n  /** Preferred position of the datepicker in the X axis. */\n  @Input()\n  xPosition: DatepickerDropdownPositionX = 'start';\n\n  /** Preferred position of the datepicker in the Y axis. */\n  @Input()\n  yPosition: DatepickerDropdownPositionY = 'below';\n\n  /**\n   * Whether to restore focus to the previously-focused element when the calendar is closed.\n   * Note that automatic focus restoration is an accessibility feature and it is recommended that\n   * you provide your own equivalent, if you decide to turn it off.\n   */\n  @Input()\n  get restoreFocus(): boolean { return this._restoreFocus; }\n  set restoreFocus(value: boolean) {\n    this._restoreFocus = coerceBooleanProperty(value);\n  }\n  private _restoreFocus = true;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits when the current view changes.\n   */\n  @Output() readonly viewChanged: EventEmitter<MatCalendarView> =\n    new EventEmitter<MatCalendarView>(true);\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Classes to be passed to the date picker panel.\n   * Supports string and string array values, similar to `ngClass`.\n   */\n  @Input()\n  get panelClass(): string | string[] { return this._panelClass; }\n  set panelClass(value: string | string[]) {\n    this._panelClass = coerceStringArray(value);\n  }\n  private _panelClass: string[];\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) {\n    coerceBooleanProperty(value) ? this.open() : this.close();\n  }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-datepicker-${datepickerUid++}`;\n\n  /** The minimum selectable date. */\n  _getMinDate(): D | null {\n    return this.datepickerInput && this.datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  _getMaxDate(): D | null {\n    return this.datepickerInput && this.datepickerInput.max;\n  }\n\n  _getDateFilter(): DateFilterFn<D> {\n    return this.datepickerInput && this.datepickerInput.dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef | null;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<MatDatepickerContent<S, D>> | null;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<S, D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n  private _backdropHarnessClass = `${this.id}-backdrop`;\n\n  /** Currently-registered actions portal. */\n  private _actionsPortal: TemplatePortal | null;\n\n  /** The input element this datepicker is associated with. */\n  datepickerInput: C;\n\n  /** Emits when the datepicker's state changes. */\n  readonly stateChanges = new Subject<void>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              private _model: MatDateSelectionModel<S, D>) {\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const positionChange = changes['xPosition'] || changes['yPosition'];\n\n    if (positionChange && !positionChange.firstChange && this._popupRef) {\n      this._setConnectedPositions(\n          this._popupRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n\n      if (this.opened) {\n        this._popupRef.updatePosition();\n      }\n    }\n\n    this.stateChanges.next(undefined);\n  }\n\n  ngOnDestroy() {\n    this._destroyPopup();\n    this.close();\n    this._inputStateChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    this._model.add(date);\n  }\n\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /** Emits changed view */\n  _viewChanged(view: MatCalendarView): void {\n    this.viewChanged.emit(view);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   * @returns Selection model that the input should hook itself up to.\n   */\n  registerInput(input: C): MatDateSelectionModel<S, D> {\n    if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._inputStateChanges.unsubscribe();\n    this.datepickerInput = input;\n    this._inputStateChanges =\n        input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n    return this._model;\n  }\n\n  /**\n   * Registers a portal containing action buttons with the datepicker.\n   * @param portal Portal to be registered.\n   */\n  registerActions(portal: TemplatePortal): void {\n    if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('A MatDatepicker can only be associated with a single actions row.');\n    }\n    this._actionsPortal = portal;\n  }\n\n  /**\n   * Removes a portal containing action buttons from the datepicker.\n   * @param portal Portal to be removed.\n   */\n  removeActions(portal: TemplatePortal): void {\n    if (portal === this._actionsPortal) {\n      this._actionsPortal = null;\n    }\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupComponentRef && this._popupRef) {\n      const instance = this._popupComponentRef.instance;\n      instance._startExitAnimation();\n      instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._restoreFocus && this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Applies the current pending selection on the popup to the model. */\n  _applyPendingSelection() {\n    const instance = this._popupComponentRef?.instance || this._dialogRef?.componentInstance;\n    instance?._applyPendingSelection();\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<MatDatepickerContent<S, D>>(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n\n      // These values are all the same as the defaults, but we set them explicitly so that the\n      // datepicker dialog behaves consistently even if the user changed the defaults.\n      hasBackdrop: true,\n      disableClose: false,\n      backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n      width: '',\n      height: '',\n      minWidth: '',\n      minHeight: '',\n      maxWidth: '80vw',\n      maxHeight: '',\n      position: {},\n\n      // Disable the dialog's automatic focus capturing, because it'll go to the close button\n      // automatically. The calendar will move focus on its own once it renders.\n      autoFocus: false,\n\n      // `MatDialog` has focus restoration built in, however we want to disable it since the\n      // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n      // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n      // restores focus when the animation is finished, but the datepicker does it immediately.\n      // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n      // inside the `closed` event which is dispatched immediately.\n      restoreFocus: false\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._forwardContentValues(this._dialogRef.componentInstance);\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    const portal = new ComponentPortal<MatDatepickerContent<S, D>>(MatDatepickerContent,\n                                                                   this._viewContainerRef);\n\n    this._destroyPopup();\n    this._createPopup();\n    this._popupComponentRef = this._popupRef!.attach(portal);\n    this._forwardContentValues(this._popupComponentRef.instance);\n\n    // Update the position once the calendar has rendered.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._popupRef!.updatePosition();\n    });\n  }\n\n  /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n  protected _forwardContentValues(instance: MatDatepickerContent<S, D>) {\n    instance.datepicker = this;\n    instance.color = this.color;\n    instance._actionsPortal = this._actionsPortal;\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const positionStrategy = this._overlay.position()\n      .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition();\n\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._setConnectedPositions(positionStrategy),\n      hasBackdrop: true,\n      backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return (event.keyCode === ESCAPE && !hasModifierKey(event)) || (this.datepickerInput &&\n            hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.close();\n    });\n  }\n\n  /** Destroys the current popup overlay. */\n  private _destroyPopup() {\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupRef = this._popupComponentRef = null;\n    }\n  }\n\n  /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n  private _setConnectedPositions(strategy: FlexibleConnectedPositionStrategy) {\n    const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n    const secondaryX = primaryX === 'start' ? 'end' : 'start';\n    const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n    const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n\n    return strategy.withPositions([\n      {\n        originX: primaryX,\n        originY: secondaryY,\n        overlayX: primaryX,\n        overlayY: primaryY\n      },\n      {\n        originX: primaryX,\n        originY: primaryY,\n        overlayX: primaryX,\n        overlayY: secondaryY\n      },\n      {\n        originX: secondaryX,\n        originY: secondaryY,\n        overlayX: secondaryX,\n        overlayY: primaryY\n      },\n      {\n        originX: secondaryX,\n        originY: primaryY,\n        overlayX: secondaryX,\n        overlayY: secondaryY\n      }\n    ]);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_opened: BooleanInput;\n  static ngAcceptInputType_touchUi: BooleanInput;\n  static ngAcceptInputType_restoreFocus: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDatepickerBase, MatDatepickerControl} from './datepicker-base';\nimport {MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER} from './date-selection-model';\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  selector: 'mat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n    {provide: MatDatepickerBase, useExisting: MatDatepicker},\n  ]\n})\nexport class MatDatepicker<D> extends MatDatepickerBase<MatDatepickerControl<D>, D | null, D> {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n} from '@angular/material/core';\nimport {Subscription, Subject} from 'rxjs';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {\n  ExtractDateTypeFromSelection,\n  MatDateSelectionModel,\n  DateSelectionModelChange,\n} from './date-selection-model';\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatepickerInputEvent<D, S = unknown> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n      /** Reference to the datepicker input component that emitted the event. */\n      public target: MatDatepickerInputBase<S, D>,\n      /** Reference to the native input element associated with the datepicker input. */\n      public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n/** Function that can be used to filter out dates from a calendar. */\nexport type DateFilterFn<D> = (date: D | null) => boolean;\n\n/** Base class for datepicker inputs. */\n@Directive()\nexport abstract class MatDatepickerInputBase<S, D = ExtractDateTypeFromSelection<S>>\n  implements ControlValueAccessor, AfterViewInit, OnChanges, OnDestroy, Validator {\n\n  /** Whether the component has been initialized. */\n  private _isInitialized: boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null {\n    return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n  }\n  set value(value: D | null) {\n    this._assignValueProgrammatically(value);\n  }\n  protected _model: MatDateSelectionModel<S, D> | undefined;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled || this._parentDisabled(); }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this.stateChanges.next(undefined);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n    // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n    // element has been inserted.\n    if (newValue && this._isInitialized && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D, S>> =\n      new EventEmitter<MatDatepickerInputEvent<D, S>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D, S>> =\n      new EventEmitter<MatDatepickerInputEvent<D, S>>();\n\n  /** Emits when the internal state has changed */\n  stateChanges = new Subject<void>();\n\n  _onTouched = () => {};\n  _validatorOnChange = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n  private _valueChangesSubscription = Subscription.EMPTY;\n  private _localeSubscription = Subscription.EMPTY;\n\n  /**\n   * Since the value is kept on the model which is assigned in an Input,\n   * we might get a value before we have a model. This property keeps track\n   * of the value until we have somewhere to assign it.\n   */\n  private _pendingValue: D | null;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    return !controlValue || this._matchesFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    const min = this._getMinDate();\n    return (!min || !controlValue ||\n        this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    const max = this._getMaxDate();\n    return (!max || !controlValue ||\n        this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': max, 'actual': controlValue}};\n  }\n\n  /** Gets the base validator functions. */\n  protected _getValidators(): ValidatorFn[] {\n    return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n  }\n\n  /** Gets the minimum date for the input. Used for validation. */\n  abstract _getMinDate(): D | null;\n\n  /** Gets the maximum date for the input. Used for validation. */\n  abstract _getMaxDate(): D | null;\n\n  /** Gets the date filter function. Used for validation. */\n  protected abstract _getDateFilter(): DateFilterFn<D> | undefined;\n\n  /** Registers a date selection model with the input. */\n  _registerModel(model: MatDateSelectionModel<S, D>): void {\n    this._model = model;\n    this._valueChangesSubscription.unsubscribe();\n\n    if (this._pendingValue) {\n      this._assignValue(this._pendingValue);\n    }\n\n    this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n      if (this._shouldHandleChangeEvent(event)) {\n        const value = this._getValueFromModel(event.selection);\n        this._lastValueValid = this._isValidValue(value);\n        this._cvaOnChange(value);\n        this._onTouched();\n        this._formatValue(value);\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      }\n    });\n  }\n\n  /** Opens the popup associated with the input. */\n  protected abstract _openPopup(): void;\n\n  /** Assigns a value to the input's model. */\n  protected abstract _assignValueToModel(model: D | null): void;\n\n  /** Converts a value from the model into a native value for the input. */\n  protected abstract _getValueFromModel(modelValue: S): D | null;\n\n  /** Combined form control validator for this input. */\n  protected abstract _validator: ValidatorFn | null;\n\n  /** Predicate that determines whether the input should handle a particular change event. */\n  protected abstract _shouldHandleChangeEvent(event: DateSelectionModelChange<S>): boolean;\n\n  /** Whether the last value set on the input was valid. */\n  protected _lastValueValid = false;\n\n  constructor(\n      protected _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this._assignValueProgrammatically(this.value);\n    });\n  }\n\n  ngAfterViewInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n\n  ngOnDestroy() {\n    this._valueChangesSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this._assignValueProgrammatically(value);\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._openPopup();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    const lastValueWasValid = this._lastValueValid;\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = this._isValidValue(date);\n    date = this._dateAdapter.getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this.value)) {\n      this._assignValue(date);\n      this._cvaOnChange(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      // Call the CVA change handler for invalid values\n      // since this is what marks the control as dirty.\n      if (value && !this.value) {\n        this._cvaOnChange(date);\n      }\n\n      if (lastValueWasValid !== this._lastValueValid) {\n        this._validatorOnChange();\n      }\n    }\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  protected _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n\n  /** Assigns a value to the model. */\n  private _assignValue(value: D | null) {\n    // We may get some incoming values before the model was\n    // assigned. Save the value so that we can assign it later.\n    if (this._model) {\n      this._assignValueToModel(value);\n      this._pendingValue = null;\n    } else {\n      this._pendingValue = value;\n    }\n  }\n\n  /** Whether a value is considered valid. */\n  private _isValidValue(value: D | null): boolean {\n    return !value || this._dateAdapter.isValid(value);\n  }\n\n  /**\n   * Checks whether a parent control is disabled. This is in place so that it can be overridden\n   * by inputs extending this one which can be placed inside of a group that can be disabled.\n   */\n  protected _parentDisabled() {\n    return false;\n  }\n\n  /** Programmatically assigns a value to the input. */\n  protected _assignValueProgrammatically(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = this._isValidValue(value);\n    value = this._dateAdapter.getValidDateOrNull(value);\n    this._assignValue(value);\n    this._formatValue(value);\n  }\n\n  /** Gets whether a value matches the current date filter. */\n  _matchesFilter(value: D | null): boolean {\n    const filter = this._getDateFilter();\n    return !filter || filter(value);\n  }\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that\n  // may accept different types.\n  static ngAcceptInputType_value: any;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nexport function dateInputsHaveChanged(\n  changes: SimpleChanges,\n  adapter: DateAdapter<unknown>): boolean {\n  const keys = Object.keys(changes);\n\n  for (let key of keys) {\n    const {previousValue, currentValue} = changes[key];\n\n    if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n      if (!adapter.sameDate(previousValue, currentValue)) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport {\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatFormField, MAT_FORM_FIELD} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {Subscription} from 'rxjs';\nimport {MatDatepickerInputBase, DateFilterFn} from './datepicker-input-base';\nimport {MatDatepickerControl, MatDatepickerPanel} from './datepicker-base';\nimport {DateSelectionModelChange} from './date-selection-model';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[matDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\n  ],\n  host: {\n    'class': 'mat-datepicker-input',\n    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    // Used by the test harness to tie this input to its calendar. We can't depend on\n    // `aria-owns` for this, because it's only defined while the calendar is open.\n    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class MatDatepickerInput<D> extends MatDatepickerInputBase<D | null, D>\n  implements MatDatepickerControl<D | null>, OnDestroy {\n  private _closedSubscription = Subscription.EMPTY;\n\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatepicker(datepicker: MatDatepickerPanel<MatDatepickerControl<D>, D | null, D>) {\n    if (datepicker) {\n      this._datepicker = datepicker;\n      this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n      this._registerModel(datepicker.registerInput(this));\n    }\n  }\n  _datepicker: MatDatepickerPanel<MatDatepickerControl<D>, D | null, D>;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._validatorOnChange();\n    }\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._validatorOnChange();\n    }\n  }\n  private _max: D | null;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input('matDatepickerFilter')\n  get dateFilter() { return this._dateFilter; }\n  set dateFilter(value: DateFilterFn<D | null>) {\n    const wasMatchingValue = this._matchesFilter(this.value);\n    this._dateFilter = value;\n\n    if (this._matchesFilter(this.value) !== wasMatchingValue) {\n      this._validatorOnChange();\n    }\n  }\n  private _dateFilter: DateFilterFn<D | null>;\n\n  /** The combined form control validator for this input. */\n  protected _validator: ValidatorFn | null;\n\n  constructor(\n      elementRef: ElementRef<HTMLInputElement>,\n      @Optional() dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats,\n      @Optional() @Inject(MAT_FORM_FIELD) private _formField: MatFormField) {\n    super(elementRef, dateAdapter, dateFormats);\n    this._validator = Validators.compose(super._getValidators());\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Gets the value at which the calendar should start. */\n  getStartValue(): D | null {\n    return this.value;\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._closedSubscription.unsubscribe();\n  }\n\n  /** Opens the associated datepicker. */\n  protected _openPopup(): void {\n    if (this._datepicker) {\n      this._datepicker.open();\n    }\n  }\n\n  protected _getValueFromModel(modelValue: D | null): D | null {\n    return modelValue;\n  }\n\n  protected _assignValueToModel(value: D | null): void {\n    if (this._model) {\n      this._model.updateSelection(value, this);\n    }\n  }\n\n  /** Gets the input's minimum date. */\n  _getMinDate() {\n    return this._min;\n  }\n\n  /** Gets the input's maximum date. */\n  _getMaxDate() {\n    return this._max;\n  }\n\n  /** Gets the input's date filtering function. */\n  protected _getDateFilter() {\n    return this._dateFilter;\n  }\n\n  protected _shouldHandleChangeEvent(event: DateSelectionModelChange<D>) {\n    return event.source !== this;\n  }\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that\n  // may accept different types.\n  static ngAcceptInputType_value: any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerControl, MatDatepickerPanel} from './datepicker-base';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class MatDatepickerToggleIcon {}\n\n\n@Component({\n  selector: 'mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    '[attr.tabindex]': 'null',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    // Used by the test harness to tie this toggle to its datepicker.\n    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n    // Bind the `click` on the host, rather than the inner `button`, so that we can call\n    // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n    // it so that the input doesn't get focused automatically by the form field (See #21836).\n    '(click)': '_open($event)',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: MatDatepickerPanel<MatDatepickerControl<any>, D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatDatepickerToggleIcon) _customIcon: MatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button') _button: MatButton;\n\n  constructor(\n    public _intl: MatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : observableOf();\n    const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ?\n        this.datepicker.datepickerInput.stateChanges : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerStateChanged,\n      inputStateChanged,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  InjectionToken,\n  Inject,\n  OnInit,\n  Injector,\n  InjectFlags,\n  DoCheck,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  NgForm,\n  FormGroupDirective,\n  NgControl,\n  ValidatorFn,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  mixinErrorState,\n  MAT_DATE_FORMATS,\n  DateAdapter,\n  MatDateFormats,\n  ErrorStateMatcher,\n} from '@angular/material/core';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {BACKSPACE} from '@angular/cdk/keycodes';\nimport {MatDatepickerInputBase, DateFilterFn} from './datepicker-input-base';\nimport {DateRange, DateSelectionModelChange} from './date-selection-model';\n\n/** Parent component that should be wrapped around `MatStartDate` and `MatEndDate`. */\nexport interface MatDateRangeInputParent<D> {\n  id: string;\n  min: D | null;\n  max: D | null;\n  dateFilter: DateFilterFn<D>;\n  rangePicker: {\n    opened: boolean;\n    id: string;\n  };\n  _startInput: MatDateRangeInputPartBase<D>;\n  _endInput: MatDateRangeInputPartBase<D>;\n  _groupDisabled: boolean;\n  _handleChildValueChange(): void;\n  _openDatepicker(): void;\n}\n\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nexport const MAT_DATE_RANGE_INPUT_PARENT =\n    new InjectionToken<MatDateRangeInputParent<unknown>>('MAT_DATE_RANGE_INPUT_PARENT');\n\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\n@Directive()\nabstract class MatDateRangeInputPartBase<D>\n  extends MatDatepickerInputBase<DateRange<D>> implements OnInit, DoCheck {\n\n  /** @docs-private */\n  ngControl: NgControl;\n\n  /** @docs-private */\n  abstract updateErrorState(): void;\n\n  protected abstract _validator: ValidatorFn | null;\n  protected abstract _assignValueToModel(value: D | null): void;\n  protected abstract _getValueFromModel(modelValue: DateRange<D>): D | null;\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) public _rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    private _injector: Injector,\n    @Optional() public _parentForm: NgForm,\n    @Optional() public _parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n    super(elementRef, dateAdapter, dateFormats);\n  }\n\n  ngOnInit() {\n    // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n    // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n    // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n    // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n    // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n    // everything has been resolved.\n    const ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n\n    if (ngControl) {\n      this.ngControl = ngControl;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  /** Gets whether the input is empty. */\n  isEmpty(): boolean {\n    return this._elementRef.nativeElement.value.length === 0;\n  }\n\n  /** Gets the placeholder of the input. */\n  _getPlaceholder() {\n    return this._elementRef.nativeElement.placeholder;\n  }\n\n  /** Focuses the input. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Handles `input` events on the input element. */\n  _onInput(value: string) {\n    super._onInput(value);\n    this._rangeInput._handleChildValueChange();\n  }\n\n  /** Opens the datepicker associated with the input. */\n  protected _openPopup(): void {\n    this._rangeInput._openDatepicker();\n  }\n\n  /** Gets the minimum date from the range input. */\n  _getMinDate() {\n    return this._rangeInput.min;\n  }\n\n  /** Gets the maximum date from the range input. */\n  _getMaxDate() {\n    return this._rangeInput.max;\n  }\n\n  /** Gets the date filter function from the range input. */\n  protected _getDateFilter() {\n    return this._rangeInput.dateFilter;\n  }\n\n  protected _parentDisabled() {\n    return this._rangeInput._groupDisabled;\n  }\n\n  protected _shouldHandleChangeEvent({source}: DateSelectionModelChange<DateRange<D>>): boolean {\n    return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n  }\n\n  protected _assignValueProgrammatically(value: D | null) {\n    super._assignValueProgrammatically(value);\n    const opposite = (this === this._rangeInput._startInput ? this._rangeInput._endInput :\n        this._rangeInput._startInput) as MatDateRangeInputPartBase<D> | undefined;\n    opposite?._validatorOnChange();\n  }\n}\n\nconst _MatDateRangeInputBase:\n    CanUpdateErrorStateCtor & typeof MatDateRangeInputPartBase =\n    // Needs to be `as any`, because the base class is abstract.\n    mixinErrorState(MatDateRangeInputPartBase as any);\n\n/** Input for entering the start date in a `mat-date-range-input`. */\n@Directive({\n  selector: 'input[matStartDate]',\n  host: {\n    'class': 'mat-start-date mat-date-range-input-inner',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(keydown)': '_onKeydown($event)',\n    '[attr.id]': '_rangeInput.id',\n    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n    '(blur)': '_onBlur()',\n    'type': 'text',\n  },\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true},\n    {provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true}\n  ],\n  // These need to be specified explicitly, because some tooling doesn't\n  // seem to pick them up from the base class. See #20932.\n  outputs: ['dateChange', 'dateInput'],\n  inputs: ['errorStateMatcher']\n})\nexport class MatStartDate<D> extends _MatDateRangeInputBase<D> implements\n    CanUpdateErrorState, DoCheck, OnInit {\n  /** Validator that checks that the start date isn't after the end date. */\n  private _startValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const start = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    const end = this._model ? this._model.selection.end : null;\n    return (!start || !end ||\n        this._dateAdapter.compareDate(start, end) <= 0) ?\n        null : {'matStartDateInvalid': {'end': end, 'actual': start}};\n  }\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    defaultErrorStateMatcher: ErrorStateMatcher,\n    injector: Injector,\n    @Optional() parentForm: NgForm,\n    @Optional() parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup,\n        dateAdapter, dateFormats);\n  }\n\n  ngOnInit() {\n    // Normally this happens automatically, but it seems to break if not added explicitly when all\n    // of the criteria below are met:\n    // 1) The class extends a TS mixin.\n    // 2) The application is running in ViewEngine.\n    // 3) The application is being transpiled through tsickle.\n    // This can be removed once google3 is completely migrated to Ivy.\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    // Normally this happens automatically, but it seems to break if not added explicitly when all\n    // of the criteria below are met:\n    // 1) The class extends a TS mixin.\n    // 2) The application is running in ViewEngine.\n    // 3) The application is being transpiled through tsickle.\n    // This can be removed once google3 is completely migrated to Ivy.\n    super.ngDoCheck();\n  }\n\n  protected _validator = Validators.compose([...super._getValidators(), this._startValidator]);\n\n  protected _getValueFromModel(modelValue: DateRange<D>) {\n    return modelValue.start;\n  }\n\n  protected _assignValueToModel(value: D | null) {\n    if (this._model) {\n      const range = new DateRange(value, this._model.selection.end);\n      this._model.updateSelection(range, this);\n    }\n  }\n\n  protected _formatValue(value: D | null) {\n    super._formatValue(value);\n\n    // Any time the input value is reformatted we need to tell the parent.\n    this._rangeInput._handleChildValueChange();\n  }\n\n  /** Gets the value that should be used when mirroring the input's size. */\n  getMirrorValue(): string {\n    const element = this._elementRef.nativeElement;\n    const value = element.value;\n    return value.length > 0 ? value : element.placeholder;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n\n/** Input for entering the end date in a `mat-date-range-input`. */\n@Directive({\n  selector: 'input[matEndDate]',\n  host: {\n    'class': 'mat-end-date mat-date-range-input-inner',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(keydown)': '_onKeydown($event)',\n    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n    '(blur)': '_onBlur()',\n    'type': 'text',\n  },\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true},\n    {provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true}\n  ],\n  // These need to be specified explicitly, because some tooling doesn't\n  // seem to pick them up from the base class. See #20932.\n  outputs: ['dateChange', 'dateInput'],\n  inputs: ['errorStateMatcher']\n})\nexport class MatEndDate<D> extends _MatDateRangeInputBase<D> implements\n    CanUpdateErrorState, DoCheck, OnInit {\n  /** Validator that checks that the end date isn't before the start date. */\n  private _endValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const start = this._model ? this._model.selection.start : null;\n    return (!end || !start ||\n        this._dateAdapter.compareDate(end, start) >= 0) ?\n        null : {'matEndDateInvalid': {'start': start, 'actual': end}};\n  }\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    defaultErrorStateMatcher: ErrorStateMatcher,\n    injector: Injector,\n    @Optional() parentForm: NgForm,\n    @Optional() parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup,\n        dateAdapter, dateFormats);\n  }\n\n  ngOnInit() {\n    // Normally this happens automatically, but it seems to break if not added explicitly when all\n    // of the criteria below are met:\n    // 1) The class extends a TS mixin.\n    // 2) The application is running in ViewEngine.\n    // 3) The application is being transpiled through tsickle.\n    // This can be removed once google3 is completely migrated to Ivy.\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    // Normally this happens automatically, but it seems to break if not added explicitly when all\n    // of the criteria below are met:\n    // 1) The class extends a TS mixin.\n    // 2) The application is running in ViewEngine.\n    // 3) The application is being transpiled through tsickle.\n    // This can be removed once google3 is completely migrated to Ivy.\n    super.ngDoCheck();\n  }\n\n  protected _validator = Validators.compose([...super._getValidators(), this._endValidator]);\n\n  protected _getValueFromModel(modelValue: DateRange<D>) {\n    return modelValue.end;\n  }\n\n  protected _assignValueToModel(value: D | null) {\n    if (this._model) {\n      const range = new DateRange(this._model.selection.start, value);\n      this._model.updateSelection(range, this);\n    }\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    // If the user is pressing backspace on an empty end input, move focus back to the start.\n    if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n      this._rangeInput._startInput.focus();\n    }\n\n    super._onKeydown(event);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Optional,\n  OnDestroy,\n  ContentChild,\n  AfterContentInit,\n  ChangeDetectorRef,\n  Self,\n  ElementRef,\n  Inject,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {MatFormFieldControl, MatFormField, MAT_FORM_FIELD} from '@angular/material/form-field';\nimport {ThemePalette, DateAdapter} from '@angular/material/core';\nimport {NgControl, ControlContainer} from '@angular/forms';\nimport {Subject, merge, Subscription} from 'rxjs';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {\n  MatStartDate,\n  MatEndDate,\n  MatDateRangeInputParent,\n  MAT_DATE_RANGE_INPUT_PARENT,\n} from './date-range-input-parts';\nimport {MatDatepickerControl, MatDatepickerPanel} from './datepicker-base';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {DateFilterFn, dateInputsHaveChanged} from './datepicker-input-base';\nimport {MatDateRangePickerInput} from './date-range-picker';\nimport {DateRange, MatDateSelectionModel} from './date-selection-model';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'mat-date-range-input',\n  templateUrl: 'date-range-input.html',\n  styleUrls: ['date-range-input.css'],\n  exportAs: 'matDateRangeInput',\n  host: {\n    'class': 'mat-date-range-input',\n    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n    '[class.mat-date-range-input-required]': 'required',\n    '[attr.id]': 'null',\n    'role': 'group',\n    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n    '[attr.aria-describedby]': '_ariaDescribedBy',\n    // Used by the test harness to tie this input to its calendar. We can't depend on\n    // `aria-owns` for this, because it's only defined while the calendar is open.\n    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {provide: MatFormFieldControl, useExisting: MatDateRangeInput},\n    {provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput},\n  ]\n})\nexport class MatDateRangeInput<D> implements MatFormFieldControl<DateRange<D>>,\n  MatDatepickerControl<D>, MatDateRangeInputParent<D>, MatDateRangePickerInput<D>,\n  AfterContentInit, OnChanges, OnDestroy {\n  private _closedSubscription = Subscription.EMPTY;\n\n  /** Current value of the range input. */\n  get value() {\n    return this._model ? this._model.selection : null;\n  }\n\n  /** Unique ID for the input. */\n  id = `mat-date-range-input-${nextUniqueId++}`;\n\n  /** Whether the control is focused. */\n  focused = false;\n\n  /** Whether the control's label should float. */\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n\n  /** Name of the form control. */\n  controlType = 'mat-date-range-input';\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n   * @docs-private\n   */\n  get placeholder() {\n    const start = this._startInput?._getPlaceholder() || '';\n    const end = this._endInput?._getPlaceholder() || '';\n    return (start || end) ? `${start} ${this.separator} ${end}` : '';\n  }\n\n  /** The range picker that this input is associated with. */\n  @Input()\n  get rangePicker() { return this._rangePicker; }\n  set rangePicker(rangePicker: MatDatepickerPanel<MatDatepickerControl<D>, DateRange<D>, D>) {\n    if (rangePicker) {\n      this._model = rangePicker.registerInput(this);\n      this._rangePicker = rangePicker;\n      this._closedSubscription.unsubscribe();\n      this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n        this._startInput?._onTouched();\n        this._endInput?._onTouched();\n      });\n      this._registerModel(this._model!);\n    }\n  }\n  private _rangePicker: MatDatepickerPanel<MatDatepickerControl<D>, DateRange<D>, D>;\n\n  /** Whether the input is required. */\n  @Input()\n  get required(): boolean { return !!this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n  private _required: boolean;\n\n  /** Function that can be used to filter out dates within the date range picker. */\n  @Input()\n  get dateFilter() { return this._dateFilter; }\n  set dateFilter(value: DateFilterFn<D>) {\n    const start = this._startInput;\n    const end = this._endInput;\n    const wasMatchingStart = start && start._matchesFilter(start.value);\n    const wasMatchingEnd = end && end._matchesFilter(start.value);\n    this._dateFilter = value;\n\n    if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n      start._validatorOnChange();\n    }\n\n    if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n      end._validatorOnChange();\n    }\n  }\n  private _dateFilter: DateFilterFn<D>;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._revalidate();\n    }\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._revalidate();\n    }\n  }\n  private _max: D | null;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return (this._startInput && this._endInput) ?\n      (this._startInput.disabled && this._endInput.disabled) :\n      this._groupDisabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._groupDisabled) {\n      this._groupDisabled = newValue;\n      this.stateChanges.next(undefined);\n    }\n  }\n  _groupDisabled = false;\n\n  /** Whether the input is in an error state. */\n  get errorState(): boolean {\n    if (this._startInput && this._endInput) {\n      return this._startInput.errorState || this._endInput.errorState;\n    }\n\n    return false;\n  }\n\n  /** Whether the datepicker input is empty. */\n  get empty(): boolean {\n    const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n    const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n    return startEmpty && endEmpty;\n  }\n\n  /** Value for the `aria-describedby` attribute of the inputs. */\n  _ariaDescribedBy: string | null = null;\n\n  /** Date selection model currently registered with the input. */\n  private _model: MatDateSelectionModel<DateRange<D>> | undefined;\n\n  /** Separator text to be shown between the inputs. */\n  @Input() separator = '–';\n\n  /** Start of the comparison range that should be shown in the calendar. */\n  @Input() comparisonStart: D | null = null;\n\n  /** End of the comparison range that should be shown in the calendar. */\n  @Input() comparisonEnd: D | null = null;\n\n  @ContentChild(MatStartDate) _startInput: MatStartDate<D>;\n  @ContentChild(MatEndDate) _endInput: MatEndDate<D>;\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * TODO(crisbeto): change type to `AbstractControlDirective` after #18206 lands.\n   * @docs-private\n   */\n  ngControl: NgControl | null;\n\n  /** Emits when the input's state has changed. */\n  stateChanges = new Subject<void>();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() control: ControlContainer,\n    @Optional() private _dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_FORM_FIELD) private _formField?: MatFormField) {\n\n    if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    // TODO(crisbeto): remove `as any` after #18206 lands.\n    this.ngControl = control as any;\n  }\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]): void {\n    this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n  }\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  onContainerClick(): void {\n    if (!this.focused && !this.disabled) {\n      if (!this._model || !this._model.selection.start) {\n        this._startInput.focus();\n      } else {\n        this._endInput.focus();\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._startInput) {\n        throw Error('mat-date-range-input must contain a matStartDate input');\n      }\n\n      if (!this._endInput) {\n        throw Error('mat-date-range-input must contain a matEndDate input');\n      }\n    }\n\n    if (this._model) {\n      this._registerModel(this._model);\n    }\n\n    // We don't need to unsubscribe from this, because we\n    // know that the input streams will be completed on destroy.\n    merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n      this.stateChanges.next(undefined);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n\n  ngOnDestroy() {\n    this._closedSubscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  /** Gets the date at which the calendar should start. */\n  getStartValue(): D | null {\n    return this.value ? this.value.start : null;\n  }\n\n  /** Gets the input's theme palette. */\n  getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Gets the element to which the calendar overlay should be attached. */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  /** Gets the value that is used to mirror the state input. */\n  _getInputMirrorValue() {\n    return this._startInput ? this._startInput.getMirrorValue() : '';\n  }\n\n  /** Whether the input placeholders should be hidden. */\n  _shouldHidePlaceholders() {\n    return this._startInput ? !this._startInput.isEmpty() : false;\n  }\n\n  /** Handles the value in one of the child inputs changing. */\n  _handleChildValueChange() {\n    this.stateChanges.next(undefined);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Opens the date range picker associated with the input. */\n  _openDatepicker() {\n    if (this._rangePicker) {\n      this._rangePicker.open();\n    }\n  }\n\n  /** Whether the separate text should be hidden. */\n  _shouldHideSeparator() {\n    return (!this._formField || this._formField._hideControlPlaceholder()) && this.empty;\n  }\n\n  /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n  _getAriaLabelledby() {\n    const formField = this._formField;\n    return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n  }\n\n  /** Re-runs the validators on the start/end inputs. */\n  private _revalidate() {\n    if (this._startInput) {\n      this._startInput._validatorOnChange();\n    }\n\n    if (this._endInput) {\n      this._endInput._validatorOnChange();\n    }\n  }\n\n  /** Registers the current date selection model with the start/end inputs. */\n  private _registerModel(model: MatDateSelectionModel<DateRange<D>>) {\n    if (this._startInput) {\n      this._startInput._registerModel(model);\n    }\n\n    if (this._endInput) {\n      this._endInput._registerModel(model);\n    }\n  }\n\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDatepickerBase, MatDatepickerContent, MatDatepickerControl} from './datepicker-base';\nimport {MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, DateRange} from './date-selection-model';\nimport {MAT_CALENDAR_RANGE_STRATEGY_PROVIDER} from './date-range-selection-strategy';\n\n/**\n * Input that can be associated with a date range picker.\n * @docs-private\n */\nexport interface MatDateRangePickerInput<D> extends MatDatepickerControl<D> {\n  comparisonStart: D|null;\n  comparisonEnd: D|null;\n}\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\n@Component({\n  selector: 'mat-date-range-picker',\n  template: '',\n  exportAs: 'matDateRangePicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n    {provide: MatDatepickerBase, useExisting: MatDateRangePicker},\n  ]\n})\nexport class MatDateRangePicker<D> extends MatDatepickerBase<MatDateRangePickerInput<D>,\n  DateRange<D>, D> {\n  protected _forwardContentValues(instance: MatDatepickerContent<DateRange<D>, D>) {\n    super._forwardContentValues(instance);\n\n    const input = this.datepickerInput;\n\n    if (input) {\n      instance.comparisonStart = input.comparisonStart;\n      instance.comparisonEnd = input.comparisonEnd;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {MatDatepickerBase, MatDatepickerControl} from './datepicker-base';\n\n\n/** Button that will close the datepicker and assign the current selection to the data model. */\n@Directive({\n  selector: '[matDatepickerApply], [matDateRangePickerApply]',\n  host: {'(click)': '_applySelection()'}\n})\nexport class MatDatepickerApply {\n  constructor(private _datepicker: MatDatepickerBase<MatDatepickerControl<unknown>, unknown>) {}\n\n  _applySelection() {\n    this._datepicker._applyPendingSelection();\n    this._datepicker.close();\n  }\n}\n\n\n/** Button that will close the datepicker and discard the current selection. */\n@Directive({\n  selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n  host: {'(click)': '_datepicker.close()'}\n})\nexport class MatDatepickerCancel {\n  constructor(public _datepicker: MatDatepickerBase<MatDatepickerControl<unknown>, unknown>) {}\n}\n\n\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\n@Component({\n  selector: 'mat-datepicker-actions, mat-date-range-picker-actions',\n  styleUrls: ['datepicker-actions.css'],\n  template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class MatDatepickerActions implements AfterViewInit, OnDestroy {\n  @ViewChild(TemplateRef) _template: TemplateRef<unknown>;\n  private _portal: TemplatePortal;\n\n  constructor(\n    private _datepicker: MatDatepickerBase<MatDatepickerControl<unknown>, unknown>,\n    private _viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit() {\n    this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    this._datepicker.registerActions(this._portal);\n  }\n\n  ngOnDestroy() {\n    this._datepicker.removeActions(this._portal);\n\n    // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n    if (this._portal && this._portal.isAttached) {\n      this._portal?.detach();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatCalendar, MatCalendarHeader} from './calendar';\nimport {MatCalendarBody} from './calendar-body';\nimport {MatDatepicker} from './datepicker';\nimport {\n  MatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker-base';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MatDateRangeInput} from './date-range-input';\nimport {MatStartDate, MatEndDate} from './date-range-input-parts';\nimport {MatDateRangePicker} from './date-range-picker';\nimport {MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel} from './datepicker-actions';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n    MatCommonModule,\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n    MatDateRangeInput,\n    MatStartDate,\n    MatEndDate,\n    MatDateRangePicker,\n    MatDatepickerActions,\n    MatDatepickerCancel,\n    MatDatepickerApply\n  ],\n  declarations: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n    MatDateRangeInput,\n    MatStartDate,\n    MatEndDate,\n    MatDateRangePicker,\n    MatDatepickerActions,\n    MatDatepickerCancel,\n    MatDatepickerApply\n  ],\n  providers: [\n    MatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n  ],\n  entryComponents: [\n    MatDatepickerContent,\n    MatCalendarHeader,\n  ]\n})\nexport class MatDatepickerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './datepicker-module';\nexport * from './calendar';\nexport * from './calendar-body';\nexport * from './datepicker';\nexport {\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n  MatDateRangeSelectionStrategy,\n  DefaultMatCalendarRangeStrategy,\n} from './date-range-selection-strategy';\nexport * from './datepicker-animations';\nexport {\n  MAT_DATEPICKER_SCROLL_STRATEGY,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatDatepickerContent,\n  DatepickerDropdownPositionX,\n  DatepickerDropdownPositionY,\n} from './datepicker-base';\nexport {MatDatepickerInputEvent, DateFilterFn} from './datepicker-input-base';\nexport {\n  MAT_DATEPICKER_VALUE_ACCESSOR,\n  MAT_DATEPICKER_VALIDATORS,\n  MatDatepickerInput,\n} from './datepicker-input';\nexport * from './datepicker-intl';\nexport * from './datepicker-toggle';\nexport * from './month-view';\nexport * from './year-view';\nexport * from './date-range-input';\nexport {MatDateRangePicker} from './date-range-picker';\nexport * from './date-selection-model';\nexport {MatStartDate, MatEndDate} from './date-range-input-parts';\nexport {MatMultiYearView, yearsPerPage, yearsPerRow} from './multi-year-view';\nexport * from './datepicker-actions';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MAT_DATE_RANGE_INPUT_PARENT as ɵangular_material_src_material_datepicker_datepicker_e} from './date-range-input-parts';\nexport {MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as ɵangular_material_src_material_datepicker_datepicker_b,MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_material_datepicker_datepicker_a} from './date-range-selection-strategy';\nexport {MatDatepickerBase as ɵangular_material_src_material_datepicker_datepicker_c} from './datepicker-base';\nexport {MatDatepickerInputBase as ɵangular_material_src_material_datepicker_datepicker_d} from './datepicker-input-base';"]}