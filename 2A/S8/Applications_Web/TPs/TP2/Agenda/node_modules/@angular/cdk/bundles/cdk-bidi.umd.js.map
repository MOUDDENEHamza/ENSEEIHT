{"version":3,"file":"cdk-bidi.umd.js","sources":["../../../../../src/cdk/bidi/dir-document-token.ts","../../../../../src/cdk/bidi/directionality.ts","../../../../../src/cdk/bidi/dir.ts","../../../../../src/cdk/bidi/bidi-module.ts","../../../../../src/cdk/bidi/public-api.ts","../../../../../src/cdk/bidi/index.ts"],"names":["InjectionToken","inject","DOCUMENT","EventEmitter","Injectable","Optional","Inject","Directive","Output","Input","NgModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {inject, InjectionToken} from '@angular/core';\n\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY,\n});\n\n/** @docs-private */\nexport function DIR_DOCUMENT_FACTORY(): Document {\n  return inject(DOCUMENT);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Inject, Injectable, Optional, OnDestroy} from '@angular/core';\nimport {DIR_DOCUMENT} from './dir-document-token';\n\n\nexport type Direction = 'ltr' | 'rtl';\n\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n@Injectable({providedIn: 'root'})\nexport class Directionality implements OnDestroy {\n  /** The current 'ltr' or 'rtl' value. */\n  readonly value: Direction = 'ltr';\n\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  readonly change = new EventEmitter<Direction>();\n\n  constructor(@Optional() @Inject(DIR_DOCUMENT) _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      const value = bodyDir || htmlDir;\n      this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter,\n  AfterContentInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n@Directive({\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[attr.dir]': '_rawDir'},\n  exportAs: 'dir',\n})\nexport class Dir implements Directionality, AfterContentInit, OnDestroy {\n  /** Normalized direction that accounts for invalid/unsupported values. */\n  private _dir: Direction = 'ltr';\n\n  /** Whether the `value` has been set to its initial value. */\n  private _isInitialized: boolean = false;\n\n  /** Direction as passed in by the consumer. */\n  _rawDir: string;\n\n  /** Event emitted when the direction changes. */\n  @Output('dirChange') change = new EventEmitter<Direction>();\n\n  /** @docs-private */\n  @Input()\n  get dir(): Direction { return this._dir; }\n  set dir(value: Direction) {\n    const old = this._dir;\n    const normalizedValue = value ? value.toLowerCase() : value;\n\n    this._rawDir = value;\n    this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n\n  /** Current layout direction of the element. */\n  get value(): Direction { return this.dir; }\n\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {Dir} from './dir';\n\n\n@NgModule({\n  exports: [Dir],\n  declarations: [Dir],\n})\nexport class BidiModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {Directionality, Direction} from './directionality';\nexport {DIR_DOCUMENT} from './dir-document-token';\nexport {Dir} from './dir';\nexport * from './bidi-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DIR_DOCUMENT_FACTORY as Éµangular_material_src_cdk_bidi_bidi_a} from './dir-document-token';"]}