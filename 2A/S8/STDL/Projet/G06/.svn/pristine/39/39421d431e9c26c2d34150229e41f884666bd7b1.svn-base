package fr.n7.stl.block.ast.classElement;

import fr.n7.stl.block.ast.Block;
import fr.n7.stl.block.ast.scope.Declaration;
import fr.n7.stl.block.ast.scope.HierarchicalScope;
import fr.n7.stl.tam.ast.Fragment;
import fr.n7.stl.tam.ast.Register;
import fr.n7.stl.tam.ast.TAMFactory;

public class MethodDeclaration implements ClassElement {

    protected AccessRight accessRight;

    protected ElementState state;

    protected Signature signature;

    protected Block corps;

    public MethodDeclaration(AccessRight _accessRight, ElementState _state, Signature _signature, Block _corps) {
        this.accessRight = _accessRight;
        this.state = _state;
        this.signature = _signature;
        this.corps = _corps;
    }

    public String toString() {
        return this.accessRight.toString() + " " + this.state.toString() + " " + this.signature.toString() + " " + "{\n"
                + corps + "}\n}\n";
    }

    @Override
    public boolean collectAndBackwardResolve(HierarchicalScope<Declaration> _scope) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public boolean fullResolve(HierarchicalScope<Declaration> _scope) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public boolean checkType() {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public int allocateMemory(Register _register, int _offset) {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public Fragment getCode(TAMFactory _factory) {
        // TODO Auto-generated method stub
        return null;
    }

}
