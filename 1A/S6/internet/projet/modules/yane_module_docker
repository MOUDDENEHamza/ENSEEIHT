#!/bin/bash
#===============================================================================
# Docker helper functions
#===============================================================================

#-------------------------------------------------------------------------------
# create host
#    $1 : hostname
#    $2 : image
#
#Warning should check that $2 is a valid image
#-------------------------------------------------------------------------------
createHost_docker () {
  IMAGE=$2
  logMessage LOG "Creating docker"
  logMessage LOG "  name : ${SESSION_ID}_$1"
  logMessage LOG "  image : $IMAGE"
  echo $IMAGE
  $DOCKER create -it --name ${SESSION_ID}_$1 --hostname $1 --network none --privileged $IMAGE > /dev/null
}

#-------------------------------------------------------------------------------
# boot host
#    $1 : hostname
#-------------------------------------------------------------------------------
bootHost_docker () {
   logMessage LOG "Booting docker container ${SESSION_ID}_$1"

   $DOCKER start ${SESSION_ID}_$1 > /dev/null # boot du container
   # Lignes suivantes extremement importantes voir le wiki page : communication netns/docker 
   CONTAINER_PID=$($DOCKER inspect --format='{{.State.Pid}}' ${SESSION_ID}_$1)
   $LN -s /proc/$CONTAINER_PID/ns/net /var/run/netns/${SESSION_ID}_$1
}

#-------------------------------------------------------------------------------
# shutdown host
#    $1 : hostname
#-------------------------------------------------------------------------------
shutdownHost_docker () {
   logMessage LOG "Shuting down docker container ${SESSION_ID}_$1"

   $RM -rf /var/run/netns/${SESSION_ID}_$1
   $DOCKER container kill ${SESSION_ID}_$1 > /dev/null
}

#-------------------------------------------------------------------------------
# delete host
#    $1 : hostname
#-------------------------------------------------------------------------------
deleteHost_docker () {
   logMessage LOG "Deleting docker container ${SESSION_ID}_$1"

   $DOCKER container rm ${SESSION_ID}_$1 > /dev/null
}

#-------------------------------------------------------------------------------
# return command that could open a terminal
#    $1 : hostname
#-------------------------------------------------------------------------------
yaneConsoleCmd_docker () {
   echo "$DOCKER attach ${SESSION_ID}_$1"
}

#-------------------------------------------------------------------------------
# add an interface to an host
#    $1 : hostname
#    $2 : interface name (already created)
#    $3 : IPv4 address (or "")
#    $4 : namespace in which $2 is defined
#-------------------------------------------------------------------------------
yaneAddHostInterface_docker () {
   logMessage DEB "Adding int '$2' from '$4' in docker container $1"

   $IP netns exec $4 $IP link set $2 netns ${SESSION_ID}_$1
   if [ -n "$3" ] ; then
      $DOCKER exec ${SESSION_ID}_$1 $IP link set $2 up
      $DOCKER exec ${SESSION_ID}_$1 $IP addr add $3 dev $2
   fi
}

#-------------------------------------------------------------------------------
# Have we created host $1 ?
#-------------------------------------------------------------------------------
yaneHostExists_docker () {
   if [ -z "`$DOCKER container ls -a|grep $1`" ] ; then
      return 1
   else
      return 0
   fi
}

#-------------------------------------------------------------------------------
# Populate the filesystem of an host
#  Warning : it doesn't work for configuration files like /etc/hosts,...
#  To configure your own docker system use images feature of Docker.
#    $1 : hostname
#    $2 : source basedir in the host filsystem (may be relative to .)
#    $3 : destination basedir in the guest (must be absolute)
#-------------------------------------------------------------------------------
yaneHostPopulateFS_docker() {
    if [ -n "$2" -a -e "$2" ] ; then
        logMessage LOG "Copying $2 to $3 in ${SESSION_ID}_$1"
	$DOCKER cp $2 ${SESSION_ID}_$1:$3
    fi
}




#-------------------------------------------------------------------------------
# run a single command in a running host
#    $1 : hostname
#    $2 : command line with args
#-------------------------------------------------------------------------------
yaneRunCmd_docker() {
    logMessage LOG "Running in '$1' the following command :"
    #logMessage LOG "$2"
    #$DOCKER exec "${SESSION_ID}_$1" $2
}


