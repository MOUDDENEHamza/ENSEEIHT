-- Programme principale.

 
with Ada.Text_IO; 	  	use Ada.Text_IO;
with Ada.Integer_Text_IO; 	use Ada.Integer_Text_IO;
with Arbre_Genealogique;	use Arbre_Genealogique;
with Ensemble;
procedure main is
	
	package Ens is
                New Ensemble (T_Element => Integer);
        use Ens;


	procedure Display_Menu is
	begin
		New_Line;
		Put_Line ("Menu principal");
		New_Line;
        	Put_Line ("0)- Pour quitter");
       		Put_Line ("1)- Créer un arbre minimal");
       		Put_Line ("2)- Ajouter un parent");
       		Put_Line ("3)- Obtenir le nombre d'ancêtres");
       		Put_Line ("4)- Obtenir l'ensemble des ancêtres situés à une certaine génération");
       		Put_Line ("5)- Afficher l'arbre génealogqiue");
       		Put_Line ("6)- Supprimer l'arbre généalogique");
       		Put_Line ("7)- Obtenir l'ensemble des individus qui n'ont qu'un parent connu");
       		Put_Line ("8)- Obtenir l'ensemble des individus dont les deux parents sont connus");
		Put_Line ("9)- Obtenir l'ensemble des individus dont les deux parents sont inconnus");
		Put_Line ("10)- Identifier les ancêtres sur n générations données");
		Put_Line ("11)- Vérifier que deux individus n et m ont un ou plusieurs ancêtres homonymes (mêmes nom et prénom)");
		New_Line;
	end Display_Menu;

	procedure Input_Integer (value : out Integer) is
	begin
		Get (value);
	exception
 		when Data_Error =>
			New_Line;
			Put_Line ("ERREUR : Vous n'avez pas saisie un entier");
			Skip_Line;
			New_Line;
			Put ("Réessayez encore une fois : ");
			Input_Integer (value);
	end Input_Integer;

	procedure Input_Choice (Choice : out Integer) is
        begin
		loop
            		Put ("Votre choix : ");
            		Input_Integer (Choice);   
            		New_Line;
	    		if (Choice < 0 or  Choice > 11) then
				Put_Line("Erreur : Il faut entrer un choix entre 0 et 11.");
				New_Line;
	    		end if;
            		exit when Choice >= 0 and Choice <= 11;
        	end loop;
	end Input_Choice;


	Ab : T_ABG;
        E : T_Ensemble;
	ID, Choice, Flag, Generation: Integer;
	

begin
	New_Line;
	Put_Line ("*****************************************************************");

	Display_Menu;
	Input_Choice (Choice);
    	
    	while true loop

		case Choice is
            		when 1 =>  -- Créer un arbre minimal.
                		Put ("Enter l'ID : ");
        			Input_Integer (ID);
				Creer_Arbre_Minimal (Ab, ID);
				Afficher_Arbre_Noeud (Ab, ID);

	    		when 2 =>  -- Ajoutet un parent.
                		Put ("Entrer l'ID : ");
                                Input_Integer (ID);
				Put_Line ("Entrez 0 s'il s'agit du père, sinon entrez 1.");
				Put ("Votre choix : ");
                        	Input_Integer (Flag);

				Ajouter_Parent (Ab, ID, Flag);
				Afficher_Arbre_Noeud (Ab, ID);

			when 3 =>  -- Obtenir le nombre d'ancêtres.
                		Put ("Entrer l'ID : ");
                                Input_Integer (ID);
				Put_Line (Integer'Image(Nombre_Ancetres (Ab, ID)));

            		when 4 =>  -- Obtenir l'ensemble des ancêtres situés à une certaine génération.
                		Put ("Entrer l'ID : ");
                                Input_Integer (ID);
				Put ("Entrer generation : ");
                                Input_Integer (Generation);

	    		when 5 =>  -- Afficher l'arbre génealogqiue.
                		Afficher_Arbre_Noeud (Ab, 1);

            		when 6 =>  -- Supprimer l'arbre généalogique.
                		Put ("Entrer l'ID : ");
                                Input_Integer (ID);
				Supprimer (Ab, ID);
            
	    		when 7 =>  -- Obtenir l'ensemble des individus qui n'ont qu'un parent connu.
                		--E := Individus_1_Parent_Connu (Ab);
				Null;
            		when 8 =>  -- utilisateur.
                		null;
	    
	    		when 9 =>  -- Obtenir l'ensemble des individus dont les deux parents sont inconnus.
                		null;

            		when 10 =>  -- utilisateur.
                		null;
            
	    		when 11 =>  -- Administrateur.
                		null;

	    		when 0 =>  -- Quitter le programme.
				exit;

            		when others => 
				null;
        end case;
	
	Display_Menu;

	Input_Choice (Choice);

    end loop;
	
	Put_Line ("A bientot");
	Put_Line ("*****************************************************************");
	New_Line;

end main;
