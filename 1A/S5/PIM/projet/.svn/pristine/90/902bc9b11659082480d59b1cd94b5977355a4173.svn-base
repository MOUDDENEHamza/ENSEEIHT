-------------------------------------------------------------------------------
--  Fichier  : display_shell.adb
--  Auteur   : MOUDDENE Hamza & CAZES Noa
--  Objectif : Implantation du module Display_Shell
--  Crée     : Dimanche Nov 25 2019
--------------------------------------------------------------------------------


with Ada.Text_IO; 	  	use Ada.Text_IO;
with Ada.Characters.Latin_1; 	use Ada.Characters.Latin_1;


package body Display_Shell is


    -- Afficher la barre d'initialisation.
    procedure Init_Bar is
    begin
        New_Line;
        Put_Line ("*****************************************************************************************************");
        New_Line;
        Put_Line ("                                           " & ESC & "[32m" & "ARBRE GÉNÉALOGIQUE" & ESC & "[0m");
        New_Line;
        Put_Line ("*****************************************************************************************************");
        New_Line;
        Put_Line ("Téléchargement programme ...");
        New_Line;
    end Init_Bar;


    -- Afficher le menu principal.
    procedure Display_Menu is
    begin
        New_Line;
        Put_Line ("                                           MENU PRINCIPAL");
        New_Line;
        Put_Line (ESC & "[31m" & "0)- Pour quitter" & ESC & "[0m");
        Put_Line (ESC & "[34m" & "1)- Créer un arbre minimal");
        Put_Line ("2)- Ajouter un parent");
        Put_Line ("3)- Obtenir le nombre d'ancêtres");
        Put_Line ("4)- Obtenir l'ensemble des ancêtres situés à une certaine génération");
        Put_Line ("5)- Afficher l'arbre génealogqiue");
        Put_Line ("6)- Supprimer l'arbre généalogique");
        Put_Line ("7)- Obtenir l'ensemble des individus qui n'ont qu'un parent connu");
        Put_Line ("8)- Obtenir l'ensemble des individus dont les deux parents sont connus");
        Put_Line ("9)- Obtenir l'ensemble des individus dont les deux parents sont inconnus");
        Put_Line ("10)- Identifier les ancêtres sur n générations données");
        Put_Line ("11)- Vérifier que deux individus n et m ont un ou plusieurs ancêtres homonymes (mêmes nom et prénom)" & ESC & "[0m");
        New_Line;
    end Display_Menu;


    -- Afficher le nouvel ID.
    procedure Display_New_ID (ID : in Integer) is
    begin
        New_Line;
        Put_Line ("Le nouvel ID est :" & Integer'Image (ID) & ".");
    end Display_New_ID;


    -- Afficher un message quand la création de l'arbre minimal réussi.
    procedure Display_Success_Minimal_Tree_Ceation is
    begin
        New_Line;
        Put_Line (ESC & "[32m" & "RÉUSSI : " & ESC & "[0m" & "La création d'arbre minimal est exécutée avec succés.");
        New_Line;
        Put_Line ("Retour au menu principal");
    end Display_Success_Minimal_Tree_Ceation;


    -- Afficher un message quand creer arbre minimal lève l'exception ARBRE_NON_VIDE_EXCEPTION.
    procedure Display_ARBRE_NON_VIDE_EXCEPTION is
    begin
        New_Line;
        Put_Line (ESC & "[31m" & "ÉCHOUÉ :" & ESC & "[0m" & " L'arbre passé en paramètre n'est pas vide. L'opération Créer un arbre minimal a échoué.");
        New_Line;
        Put_Line ("Retour au menu principal");
    end Display_ARBRE_NON_VIDE_EXCEPTION;


    -- Afficher un message quand ajouter parent réussit.
    procedure Display_Success_Add_Parent is
    begin
        New_Line;
        Put_Line (ESC & "[32m" & "RÉUSSI : " & ESC & "[0m" & "Ajout du parent est fait avec succés.");
        New_Line;
        Put_Line ("Retour au menu principal");
    end Display_Success_Add_Parent;


    -- Afficher un message quand ajouter parent lève l'exception ARBRE_VIDE_EXCEPTION.
    procedure Display_ARBRE_VIDE_EXCEPTION is
    begin
        New_Line;
        Put_Line (ESC & "[31m" & "ÉCHOUÉ : " & ESC & "[0m" & "L'arbre passé en paramètre est vide. L'ajout du parent a échoué.");
        New_Line;
        Put_Line ("Retour au menu principal.");
    end Display_ARBRE_VIDE_EXCEPTION;


    -- Afficher un message quand ajouter parent lève l'exception DEUX_PARENTS_PRESENTS_EXCEPTION.
    procedure Display_DEUX_PARENTS_PRESENTS_EXCEPTION is
    begin
        New_Line;
        Put_Line (ESC & "[31m" & "ÉCHOUÉ : " & ESC & "[0m" & "L'individu a déjà deux parents. L'ajout du parent a échoué.");
        New_Line;
        Put_Line ("Réessayez encore une fois avec un autre ID.");
    end Display_DEUX_PARENTS_PRESENTS_EXCEPTION;


    -- Afficher un message quand ajouter parent lève l'exception ID_ABSENT_EXCEPTION.
    procedure Display_ID_ABSENT_EXCEPTION (Message : in String; Restart : in Integer) is
    begin
        New_Line;
        Put_Line (ESC & "[31m" & "ÉCHOUÉ : " & ESC & "[0m" & "l'ID que vous avez entré n'existe pas. " & Message);
        New_Line;
        if (Restart = 0) then
            Put_Line ("Réessayez encore une fois avec un autre ID.");
        else
            Put_Line ("Retour au menu principal.");
        end if;
    end Display_ID_ABSENT_EXCEPTION;


    -- Afficher le nombre d'ancetres d'un individu donné.
    procedure Display_Number_Ancestors (Ab : in T_ABG; ID : in Integer) is
    begin
        Put_Line ("L'individu qui a l'ID" & ESC & "[32m" & Integer'Image (ID) & ESC & "[0m" & " a" & ESC & "[31m" & Integer'Image(Nombre_Ancetres (Ab, ID)) & ESC & "[0m" &  " ancetres.");
        New_Line;
        Put_Line ("Retour au menu principal.");
    end Display_Number_Ancestors;


    -- Afficher la barre de fin d'exécution.
    procedure End_Bar is
    begin
        New_Line;
        Put_Line ("À bientôt!");
        New_Line;
        Put_Line ("                                           " & ESC & "[32m" & "FIN D'EXÉCTUTION" & ESC & "[0m");
        New_Line;
        Put_Line ("*****************************************************************************************************");
        New_Line;
    end End_Bar;


end Display_Shell;
